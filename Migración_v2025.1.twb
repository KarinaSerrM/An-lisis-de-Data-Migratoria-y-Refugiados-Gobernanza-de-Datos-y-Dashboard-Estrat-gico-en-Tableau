<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0818.1050                               -->
<workbook original-version='18.1' source-build='2025.2.2 (20252.25.0818.1050)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <ExplainData_AuthorControls />
    <ExplainData_NullValueExplanation />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <style>
    <style-rule element='animation'>
      <format attr='animation-style' value='as-phased' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='International_migrants_and_refugees' inline='true' name='federated.1l4sx510lvvcov190txbf16cwi2e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='International_migrants_and_refugees' name='textscan.0lbj8dk018c4rt1d2kg8t1wv7pul'>
            <connection class='textscan' directory='C:/Users/Kary/Downloads' filename='International_migrants_and_refugees.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='International_migrants_and_refugees.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
            <column datatype='integer' name='country_code' />
            <column datatype='string' name='region_country_area' />
            <column datatype='integer' name='year' />
            <column datatype='string' name='series' />
            <column datatype='real' name='value' />
            <column datatype='string' name='notes' />
            <column datatype='string' name='source' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0lbj8dk018c4rt1d2kg8t1wv7pul' name='International_migrants_and_refugees.csv' table='[International_migrants_and_refugees#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
              <column datatype='integer' name='country_code' ordinal='0' />
              <column datatype='string' name='region_country_area' ordinal='1' />
              <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='2' />
              <column datatype='string' name='series' ordinal='3' />
              <column datatype='real' name='value' ordinal='4' />
              <column datatype='string' name='notes' ordinal='5' />
              <column datatype='string' name='source' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;es_MX&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_country_area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_country_area]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>region_country_area</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>series</remote-name>
            <remote-type>129</remote-type>
            <local-name>[series]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>series</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[notes]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>notes</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[International_migrants_and_refugees.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Genero' datatype='string' name='[Calculation_1275926122913255424]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([series], &quot;Male&quot;) THEN &quot;Masculino&quot;&#13;&#10;ELSEIF CONTAINS([series], &quot;Female&quot;) THEN &quot;Femenino&quot;&#13;&#10;END' />
      </column>
      <column caption='Migrantes' datatype='real' name='[Calculation_1275926122927964167]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; THEN [value] ELSE 0 END' />
      </column>
      <column caption='Refugiados' datatype='real' name='[Calculation_1275926122928050184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [series] = &quot;Total refugees and people in refugee-like situations (number)&quot; THEN [value] ELSE 0 END' />
      </column>
      <column caption='Asilo' datatype='real' name='[Calculation_1275926122928783369]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [series] = &quot;Asylum seekers, including pending cases (number)&quot; THEN [value] ELSE 0 END' />
      </column>
      <column caption='Crecimiento anual de migrantes' datatype='real' name='[Calculation_1275926122931503115]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Calculation_1275926122927964167])) - LOOKUP(ZN(SUM([Calculation_1275926122927964167])), -1)) / LOOKUP(ZN(SUM([Calculation_1275926122927964167])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Crecimiento anual de refugiados' datatype='real' name='[Calculation_1275926122931728396]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Calculation_1275926122928050184])) - LOOKUP(ZN(SUM([Calculation_1275926122928050184])), -1)) / LOOKUP(ZN(SUM([Calculation_1275926122928050184])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Crecimiento anual de asilo' datatype='real' name='[Calculation_1275926122931941389]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Calculation_1275926122928783369])) - LOOKUP(ZN(SUM([Calculation_1275926122928783369])), -1)) / LOOKUP(ZN(SUM([Calculation_1275926122928783369])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Países' datatype='string' name='[Calculation_1275926122935771151]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='CASE [region_country_area]&#13;&#10;    WHEN &apos;Afghanistan&apos; THEN &apos;Afghanistan&apos;&#13;&#10;    WHEN &apos;Albania&apos; THEN &apos;Albania&apos;&#13;&#10;    WHEN &apos;Algeria&apos; THEN &apos;Algeria&apos;&#13;&#10;    WHEN &apos;Andorra&apos; THEN &apos;Andorra&apos;&#13;&#10;    WHEN &apos;Angola&apos; THEN &apos;Angola&apos;&#13;&#10;    WHEN &apos;Antigua and Barbuda&apos; THEN &apos;Antigua and Barbuda&apos;&#13;&#10;    WHEN &apos;Argentina&apos; THEN &apos;Argentina&apos;&#13;&#10;    WHEN &apos;Armenia&apos; THEN &apos;Armenia&apos;&#13;&#10;    WHEN &apos;Australia&apos; THEN &apos;Australia&apos;&#13;&#10;    WHEN &apos;Austria&apos; THEN &apos;Austria&apos;&#13;&#10;    WHEN &apos;Azerbaijan&apos; THEN &apos;Azerbaijan&apos;&#13;&#10;    WHEN &apos;Bahamas&apos; THEN &apos;Bahamas&apos;&#13;&#10;    WHEN &apos;Bahrain&apos; THEN &apos;Bahrain&apos;&#13;&#10;    WHEN &apos;Bangladesh&apos; THEN &apos;Bangladesh&apos;&#13;&#10;    WHEN &apos;Barbados&apos; THEN &apos;Barbados&apos;&#13;&#10;    WHEN &apos;Belarus&apos; THEN &apos;Belarus&apos;&#13;&#10;    WHEN &apos;Belgium&apos; THEN &apos;Belgium&apos;&#13;&#10;    WHEN &apos;Belize&apos; THEN &apos;Belize&apos;&#13;&#10;    WHEN &apos;Benin&apos; THEN &apos;Benin&apos;&#13;&#10;    WHEN &apos;Bhutan&apos; THEN &apos;Bhutan&apos;&#13;&#10;    WHEN &apos;Bolivia (Plurinational State of)&apos; THEN &apos;Bolivia (Plurinational State of)&apos;&#13;&#10;    WHEN &apos;Bosnia and Herzegovina&apos; THEN &apos;Bosnia and Herzegovina&apos;&#13;&#10;    WHEN &apos;Botswana&apos; THEN &apos;Botswana&apos;&#13;&#10;    WHEN &apos;Brazil&apos; THEN &apos;Brazil&apos;&#13;&#10;    WHEN &apos;Brunei Darussalam&apos; THEN &apos;Brunei Darussalam&apos;&#13;&#10;    WHEN &apos;Bulgaria&apos; THEN &apos;Bulgaria&apos;&#13;&#10;    WHEN &apos;Burkina Faso&apos; THEN &apos;Burkina Faso&apos;&#13;&#10;    WHEN &apos;Burundi&apos; THEN &apos;Burundi&apos;&#13;&#10;    WHEN &apos;Cabo Verde&apos; THEN &apos;Cabo Verde&apos;&#13;&#10;    WHEN &apos;Cambodia&apos; THEN &apos;Cambodia&apos;&#13;&#10;    WHEN &apos;Cameroon&apos; THEN &apos;Cameroon&apos;&#13;&#10;    WHEN &apos;Canada&apos; THEN &apos;Canada&apos;&#13;&#10;    WHEN &apos;Central African Republic&apos; THEN &apos;Central African Republic&apos;&#13;&#10;    WHEN &apos;Chad&apos; THEN &apos;Chad&apos;&#13;&#10;    WHEN &apos;Chile&apos; THEN &apos;Chile&apos;&#13;&#10;    WHEN &apos;China&apos; THEN &apos;China&apos;&#13;&#10;    WHEN &apos;Colombia&apos; THEN &apos;Colombia&apos;&#13;&#10;    WHEN &apos;Comoros&apos; THEN &apos;Comoros&apos;&#13;&#10;    WHEN &apos;Congo&apos; THEN &apos;Congo&apos;&#13;&#10;    WHEN &apos;Costa Rica&apos; THEN &apos;Costa Rica&apos;&#13;&#10;    WHEN &apos;Cote dIvoire&apos; THEN &apos;Cote dIvoire&apos;&#13;&#10;    WHEN &apos;Croatia&apos; THEN &apos;Croatia&apos;&#13;&#10;    WHEN &apos;Cuba&apos; THEN &apos;Cuba&apos;&#13;&#10;    WHEN &apos;Cyprus&apos; THEN &apos;Cyprus&apos;&#13;&#10;    WHEN &apos;Czechia&apos; THEN &apos;Czechia&apos;&#13;&#10;    WHEN &apos;Democratic Republic of the Congo&apos; THEN &apos;Democratic Republic of the Congo&apos;&#13;&#10;    WHEN &apos;Denmark&apos; THEN &apos;Denmark&apos;&#13;&#10;    WHEN &apos;Djibouti&apos; THEN &apos;Djibouti&apos;&#13;&#10;    WHEN &apos;Dominica&apos; THEN &apos;Dominica&apos;&#13;&#10;    WHEN &apos;Dominican Republic&apos; THEN &apos;Dominican Republic&apos;&#13;&#10;    WHEN &apos;Ecuador&apos; THEN &apos;Ecuador&apos;&#13;&#10;    WHEN &apos;Egypt&apos; THEN &apos;Egypt&apos;&#13;&#10;    WHEN &apos;El Salvador&apos; THEN &apos;El Salvador&apos;&#13;&#10;    WHEN &apos;Equatorial Guinea&apos; THEN &apos;Equatorial Guinea&apos;&#13;&#10;    WHEN &apos;Eritrea&apos; THEN &apos;Eritrea&apos;&#13;&#10;    WHEN &apos;Estonia&apos; THEN &apos;Estonia&apos;&#13;&#10;    WHEN &apos;Eswatini&apos; THEN &apos;Eswatini&apos;&#13;&#10;    WHEN &apos;Ethiopia&apos; THEN &apos;Ethiopia&apos;&#13;&#10;    WHEN &apos;Fiji&apos; THEN &apos;Fiji&apos;&#13;&#10;    WHEN &apos;Finland&apos; THEN &apos;Finland&apos;&#13;&#10;    WHEN &apos;France&apos; THEN &apos;France&apos;&#13;&#10;    WHEN &apos;Gabon&apos; THEN &apos;Gabon&apos;&#13;&#10;    WHEN &apos;Gambia&apos; THEN &apos;Gambia&apos;&#13;&#10;    WHEN &apos;Georgia&apos; THEN &apos;Georgia&apos;&#13;&#10;    WHEN &apos;Germany&apos; THEN &apos;Germany&apos;&#13;&#10;    WHEN &apos;Ghana&apos; THEN &apos;Ghana&apos;&#13;&#10;    WHEN &apos;Greece&apos; THEN &apos;Greece&apos;&#13;&#10;    WHEN &apos;Grenada&apos; THEN &apos;Grenada&apos;&#13;&#10;    WHEN &apos;Guatemala&apos; THEN &apos;Guatemala&apos;&#13;&#10;    WHEN &apos;Guinea&apos; THEN &apos;Guinea&apos;&#13;&#10;    WHEN &apos;Guinea-Bissau&apos; THEN &apos;Guinea-Bissau&apos;&#13;&#10;    WHEN &apos;Guyana&apos; THEN &apos;Guyana&apos;&#13;&#10;    WHEN &apos;Haiti&apos; THEN &apos;Haiti&apos;&#13;&#10;    WHEN &apos;Honduras&apos; THEN &apos;Honduras&apos;&#13;&#10;    WHEN &apos;Hungary&apos; THEN &apos;Hungary&apos;&#13;&#10;    WHEN &apos;Iceland&apos; THEN &apos;Iceland&apos;&#13;&#10;    WHEN &apos;India&apos; THEN &apos;India&apos;&#13;&#10;    WHEN &apos;Indonesia&apos; THEN &apos;Indonesia&apos;&#13;&#10;    WHEN &apos;Iran (Islamic Republic of)&apos; THEN &apos;Iran (Islamic Republic of)&apos;&#13;&#10;    WHEN &apos;Iraq&apos; THEN &apos;Iraq&apos;&#13;&#10;    WHEN &apos;Ireland&apos; THEN &apos;Ireland&apos;&#13;&#10;    WHEN &apos;Israel&apos; THEN &apos;Israel&apos;&#13;&#10;    WHEN &apos;Italy&apos; THEN &apos;Italy&apos;&#13;&#10;    WHEN &apos;Jamaica&apos; THEN &apos;Jamaica&apos;&#13;&#10;    WHEN &apos;Japan&apos; THEN &apos;Japan&apos;&#13;&#10;    WHEN &apos;Jordan&apos; THEN &apos;Jordan&apos;&#13;&#10;    WHEN &apos;Kazakhstan&apos; THEN &apos;Kazakhstan&apos;&#13;&#10;    WHEN &apos;Kenya&apos; THEN &apos;Kenya&apos;&#13;&#10;    WHEN &apos;Kiribati&apos; THEN &apos;Kiribati&apos;&#13;&#10;    WHEN &apos;Kuwait&apos; THEN &apos;Kuwait&apos;&#13;&#10;    WHEN &apos;Kyrgyzstan&apos; THEN &apos;Kyrgyzstan&apos;&#13;&#10;    WHEN &apos;Lao Peoples Democratic Republic&apos; THEN &apos;Lao Peoples Democratic Republic&apos;&#13;&#10;    WHEN &apos;Latvia&apos; THEN &apos;Latvia&apos;&#13;&#10;    WHEN &apos;Lebanon&apos; THEN &apos;Lebanon&apos;&#13;&#10;    WHEN &apos;Lesotho&apos; THEN &apos;Lesotho&apos;&#13;&#10;    WHEN &apos;Liberia&apos; THEN &apos;Liberia&apos;&#13;&#10;    WHEN &apos;Libya&apos; THEN &apos;Libya&apos;&#13;&#10;    WHEN &apos;Liechtenstein&apos; THEN &apos;Liechtenstein&apos;&#13;&#10;    WHEN &apos;Lithuania&apos; THEN &apos;Lithuania&apos;&#13;&#10;    WHEN &apos;Luxembourg&apos; THEN &apos;Luxembourg&apos;&#13;&#10;    WHEN &apos;Madagascar&apos; THEN &apos;Madagascar&apos;&#13;&#10;    WHEN &apos;Malawi&apos; THEN &apos;Malawi&apos;&#13;&#10;    WHEN &apos;Malaysia&apos; THEN &apos;Malaysia&apos;&#13;&#10;    WHEN &apos;Maldives&apos; THEN &apos;Maldives&apos;&#13;&#10;    WHEN &apos;Mali&apos; THEN &apos;Mali&apos;&#13;&#10;    WHEN &apos;Malta&apos; THEN &apos;Malta&apos;&#13;&#10;    WHEN &apos;Marshall Islands&apos; THEN &apos;Marshall Islands&apos;&#13;&#10;    WHEN &apos;Mauritania&apos; THEN &apos;Mauritania&apos;&#13;&#10;    WHEN &apos;Mauritius&apos; THEN &apos;Mauritius&apos;&#13;&#10;    WHEN &apos;Mexico&apos; THEN &apos;Mexico&apos;&#13;&#10;    WHEN &apos;Micronesia (Federated States of)&apos; THEN &apos;Micronesia (Federated States of)&apos;&#13;&#10;    WHEN &apos;Monaco&apos; THEN &apos;Monaco&apos;&#13;&#10;    WHEN &apos;Mongolia&apos; THEN &apos;Mongolia&apos;&#13;&#10;    WHEN &apos;Montenegro&apos; THEN &apos;Montenegro&apos;&#13;&#10;    WHEN &apos;Morocco&apos; THEN &apos;Morocco&apos;&#13;&#10;    WHEN &apos;Mozambique&apos; THEN &apos;Mozambique&apos;&#13;&#10;    WHEN &apos;Myanmar&apos; THEN &apos;Myanmar&apos;&#13;&#10;    WHEN &apos;Namibia&apos; THEN &apos;Namibia&apos;&#13;&#10;    WHEN &apos;Nauru&apos; THEN &apos;Nauru&apos;&#13;&#10;    WHEN &apos;Nepal&apos; THEN &apos;Nepal&apos;&#13;&#10;    WHEN &apos;Netherlands&apos; THEN &apos;Netherlands&apos;&#13;&#10;    WHEN &apos;New Zealand&apos; THEN &apos;New Zealand&apos;&#13;&#10;    WHEN &apos;Nicaragua&apos; THEN &apos;Nicaragua&apos;&#13;&#10;    WHEN &apos;Niger&apos; THEN &apos;Niger&apos;&#13;&#10;    WHEN &apos;Nigeria&apos; THEN &apos;Nigeria&apos;&#13;&#10;    WHEN &apos;North Macedonia&apos; THEN &apos;North Macedonia&apos;&#13;&#10;    WHEN &apos;Norway&apos; THEN &apos;Norway&apos;&#13;&#10;    WHEN &apos;Oman&apos; THEN &apos;Oman&apos;&#13;&#10;    WHEN &apos;Pakistan&apos; THEN &apos;Pakistan&apos;&#13;&#10;    WHEN &apos;Palau&apos; THEN &apos;Palau&apos;&#13;&#10;    WHEN &apos;Panama&apos; THEN &apos;Panama&apos;&#13;&#10;    WHEN &apos;Papua New Guinea&apos; THEN &apos;Papua New Guinea&apos;&#13;&#10;    WHEN &apos;Paraguay&apos; THEN &apos;Paraguay&apos;&#13;&#10;    WHEN &apos;Peru&apos; THEN &apos;Peru&apos;&#13;&#10;    WHEN &apos;Philippines&apos; THEN &apos;Philippines&apos;&#13;&#10;    WHEN &apos;Poland&apos; THEN &apos;Poland&apos;&#13;&#10;    WHEN &apos;Portugal&apos; THEN &apos;Portugal&apos;&#13;&#10;    WHEN &apos;Qatar&apos; THEN &apos;Qatar&apos;&#13;&#10;    WHEN &apos;Republic of Korea&apos; THEN &apos;Republic of Korea&apos;&#13;&#10;    WHEN &apos;Republic of Moldova&apos; THEN &apos;Republic of Moldova&apos;&#13;&#10;    WHEN &apos;Romania&apos; THEN &apos;Romania&apos;&#13;&#10;    WHEN &apos;Russian Federation&apos; THEN &apos;Russian Federation&apos;&#13;&#10;    WHEN &apos;Rwanda&apos; THEN &apos;Rwanda&apos;&#13;&#10;    WHEN &apos;Saint Kitts and Nevis&apos; THEN &apos;Saint Kitts and Nevis&apos;&#13;&#10;    WHEN &apos;Saint Lucia&apos; THEN &apos;Saint Lucia&apos;&#13;&#10;    WHEN &apos;Saint Vincent and the Grenadines&apos; THEN &apos;Saint Vincent and the Grenadines&apos;&#13;&#10;    WHEN &apos;Samoa&apos; THEN &apos;Samoa&apos;&#13;&#10;    WHEN &apos;San Marino&apos; THEN &apos;San Marino&apos;&#13;&#10;    WHEN &apos;Sao Tome and Principe&apos; THEN &apos;Sao Tome and Principe&apos;&#13;&#10;    WHEN &apos;Saudi Arabia&apos; THEN &apos;Saudi Arabia&apos;&#13;&#10;    WHEN &apos;Senegal&apos; THEN &apos;Senegal&apos;&#13;&#10;    WHEN &apos;Serbia&apos; THEN &apos;Serbia&apos;&#13;&#10;    WHEN &apos;Seychelles&apos; THEN &apos;Seychelles&apos;&#13;&#10;    WHEN &apos;Sierra Leone&apos; THEN &apos;Sierra Leone&apos;&#13;&#10;    WHEN &apos;Singapore&apos; THEN &apos;Singapore&apos;&#13;&#10;    WHEN &apos;Slovakia&apos; THEN &apos;Slovakia&apos;&#13;&#10;    WHEN &apos;Slovenia&apos; THEN &apos;Slovenia&apos;&#13;&#10;    WHEN &apos;Solomon Islands&apos; THEN &apos;Solomon Islands&apos;&#13;&#10;    WHEN &apos;Somalia&apos; THEN &apos;Somalia&apos;&#13;&#10;    WHEN &apos;South Africa&apos; THEN &apos;South Africa&apos;&#13;&#10;    WHEN &apos;South Sudan&apos; THEN &apos;South Sudan&apos;&#13;&#10;    WHEN &apos;Spain&apos; THEN &apos;Spain&apos;&#13;&#10;    WHEN &apos;Sri Lanka&apos; THEN &apos;Sri Lanka&apos;&#13;&#10;    WHEN &apos;State of Palestine&apos; THEN &apos;State of Palestine&apos;&#13;&#10;    WHEN &apos;Sudan&apos; THEN &apos;Sudan&apos;&#13;&#10;    WHEN &apos;Suriname&apos; THEN &apos;Suriname&apos;&#13;&#10;    WHEN &apos;Sweden&apos; THEN &apos;Sweden&apos;&#13;&#10;    WHEN &apos;Switzerland&apos; THEN &apos;Switzerland&apos;&#13;&#10;    WHEN &apos;Syrian Arab Republic&apos; THEN &apos;Syrian Arab Republic&apos;&#13;&#10;    WHEN &apos;Tajikistan&apos; THEN &apos;Tajikistan&apos;&#13;&#10;    WHEN &apos;Thailand&apos; THEN &apos;Thailand&apos;&#13;&#10;    WHEN &apos;Timor-Leste&apos; THEN &apos;Timor-Leste&apos;&#13;&#10;    WHEN &apos;Togo&apos; THEN &apos;Togo&apos;&#13;&#10;    WHEN &apos;Tonga&apos; THEN &apos;Tonga&apos;&#13;&#10;    WHEN &apos;Trinidad and Tobago&apos; THEN &apos;Trinidad and Tobago&apos;&#13;&#10;    WHEN &apos;Tunisia&apos; THEN &apos;Tunisia&apos;&#13;&#10;    WHEN &apos;Turkmenistan&apos; THEN &apos;Turkmenistan&apos;&#13;&#10;    WHEN &apos;Tuvalu&apos; THEN &apos;Tuvalu&apos;&#13;&#10;    WHEN &apos;Uganda&apos; THEN &apos;Uganda&apos;&#13;&#10;    WHEN &apos;Ukraine&apos; THEN &apos;Ukraine&apos;&#13;&#10;    WHEN &apos;United Arab Emirates&apos; THEN &apos;United Arab Emirates&apos;&#13;&#10;    WHEN &apos;United Kingdom&apos; THEN &apos;United Kingdom&apos;&#13;&#10;    WHEN &apos;United Republic of Tanzania&apos; THEN &apos;United Republic of Tanzania&apos;&#13;&#10;    WHEN &apos;United States of America&apos; THEN &apos;United States of America&apos;&#13;&#10;    WHEN &apos;Uruguay&apos; THEN &apos;Uruguay&apos;&#13;&#10;    WHEN &apos;Uzbekistan&apos; THEN &apos;Uzbekistan&apos;&#13;&#10;    WHEN &apos;Vanuatu&apos; THEN &apos;Vanuatu&apos;&#13;&#10;    WHEN &apos;Venezuela (Bolivarian Republic of)&apos; THEN &apos;Venezuela (Bolivarian Republic of)&apos;&#13;&#10;    WHEN &apos;Viet Nam&apos; THEN &apos;Viet Nam&apos;&#13;&#10;    WHEN &apos;Yemen&apos; THEN &apos;Yemen&apos;&#13;&#10;    WHEN &apos;Zambia&apos; THEN &apos;Zambia&apos;&#13;&#10;    WHEN &apos;Zimbabwe&apos; THEN &apos;Zimbabwe&apos;&#13;&#10;    ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Personas de preocupación' datatype='real' name='[Calculation_1275926122953949202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Personas de preocupación UNHCR (suma de refugiados + asilo)&#13;&#10;[Calculation_1275926122928050184] + [Calculation_1275926122928783369]' />
      </column>
      <column caption='Porcentaje de Refugiados_Asilo' datatype='real' name='[Calculation_1275926122958766102]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1275926122928050184])+SUM([Calculation_1275926122928783369]) / TOTAL(SUM([value]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Continentes' datatype='string' name='[Calculation_1275926122966331415]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF&#13;&#10;    CONTAINS([region_country_area], &quot;Africa&quot;) OR&#13;&#10;    CONTAINS([region_country_area], &quot;America&quot;) OR&#13;&#10;    CONTAINS([region_country_area], &quot;Asia&quot;) OR&#13;&#10;    CONTAINS([region_country_area], &quot;Europe&quot;) OR&#13;&#10;    CONTAINS([region_country_area], &quot;Oceania&quot;)&#13;&#10;THEN [region_country_area]&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Regiones' datatype='string' name='[Calculation_1275926122968838168]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='CASE [region_country_area]&#13;&#10;    WHEN &apos;Northern America&apos; THEN &apos;Northern America&apos;&#13;&#10;    WHEN &apos;Latin America and the Caribbean&apos; THEN &apos;Latin America and the Caribbean&apos;&#13;&#10;    WHEN &apos;Sub-Saharan Africa&apos; THEN &apos;Sub-Saharan Africa&apos;&#13;&#10;    WHEN &apos;Northern Africa&apos; THEN &apos;Northern Africa&apos;&#13;&#10;    WHEN &apos;Southern Asia&apos; THEN &apos;Southern Asia&apos;&#13;&#10;    WHEN &apos;Eastern Asia&apos; THEN &apos;Eastern Asia&apos;&#13;&#10;    WHEN &apos;South-Eastern Asia&apos; THEN &apos;South-Eastern Asia&apos;&#13;&#10;    WHEN &apos;Western Asia&apos; THEN &apos;Western Asia&apos;&#13;&#10;    WHEN &apos;Central Asia&apos; THEN &apos;Central Asia&apos;&#13;&#10;    WHEN &apos;Eastern Europe&apos; THEN &apos;Eastern Europe&apos;&#13;&#10;    WHEN &apos;Western Europe&apos; THEN &apos;Western Europe&apos;&#13;&#10;    WHEN &apos;Southern Europe&apos; THEN &apos;Southern Europe&apos;&#13;&#10;    WHEN &apos;Northern Europe&apos; THEN &apos;Northern Europe&apos;&#13;&#10;    WHEN &apos;Middle Africa&apos; THEN &apos;Middle Africa&apos;&#13;&#10;    WHEN &apos;Southern Africa&apos; THEN &apos;Southern Africa&apos;&#13;&#10;    WHEN &apos;Western Africa&apos; THEN &apos;Western Africa&apos;&#13;&#10;    WHEN &apos;Eastern Africa&apos; THEN &apos;Eastern Africa&apos;&#13;&#10;    WHEN &apos;Central America&apos; THEN &apos;Central America&apos;&#13;&#10;    WHEN &apos;South America&apos; THEN &apos;South America&apos;&#13;&#10;    WHEN &apos;Caribbean&apos; THEN &apos;Caribbean&apos;&#13;&#10;    WHEN &apos;Micronesia&apos; THEN &apos;Micronesia&apos;&#13;&#10;    WHEN &apos;Polynesia&apos; THEN &apos;Polynesia&apos;&#13;&#10;    WHEN &apos;Melanesia&apos; THEN &apos;Melanesia&apos;&#13;&#10;    WHEN &apos;Africa&apos; THEN &apos;Africa&apos;&#13;&#10;    WHEN &apos;Asia&apos; THEN &apos;Asia&apos;&#13;&#10;    WHEN &apos;Europe&apos; THEN &apos;Europe&apos;&#13;&#10;    WHEN &apos;Oceania&apos; THEN &apos;Oceania&apos;&#13;&#10;    ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Total Migrantes' datatype='real' name='[Calculation_1275926122990092313]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; &#13;&#10;THEN [value] END' />
      </column>
      <column caption='International_migrants_and_refugees.csv' datatype='table' name='[__tableau_internal_object_id__].[International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787]' role='measure' type='quantitative' />
      <column caption='Country Code' datatype='integer' name='[country_code]' role='dimension' type='ordinal' />
      <column caption='Notes' datatype='string' name='[notes]' role='dimension' type='nominal' />
      <column caption='Region Country Area' datatype='string' name='[region_country_area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1275926122913255424]' derivation='None' name='[none:Calculation_1275926122913255424:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1275926122966331415]' derivation='None' name='[none:Calculation_1275926122966331415:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[pcto:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1275926122927964167]' derivation='Sum' name='[sum:Calculation_1275926122927964167:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1275926122928050184]' derivation='Sum' name='[sum:Calculation_1275926122928050184:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1275926122928783369]' derivation='Sum' name='[sum:Calculation_1275926122928783369:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1275926122931503115]' derivation='User' name='[usr:Calculation_1275926122931503115:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1275926122931728396]' derivation='User' name='[usr:Calculation_1275926122931728396:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1275926122931941389]' derivation='User' name='[usr:Calculation_1275926122931941389:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Acción (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1275926122966331415:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;Southern Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;Northern Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;South-eastern Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;South-central Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;Central America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;Northern America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;Latin America &amp; the Caribbean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[usr:Calculation_1275926122931503115:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[usr:Calculation_1275926122931941389:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122928783369:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[pcto:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122928050184:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122927964167:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[usr:Calculation_1275926122931728396:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1275926122913255424:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Masculino&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Femenino&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estados Unidos Mexicanos&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='International_migrants_and_refugees.csv' id='International_migrants_and_refugees.csv_ABEBC5697C574BBDB2679491F4E9C787'>
            <properties context=''>
              <relation all='true' name='International_migrants_and_refugees.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
                  <column datatype='integer' name='country_code' />
                  <column datatype='string' name='region_country_area' />
                  <column datatype='integer' name='year' />
                  <column datatype='string' name='series' />
                  <column datatype='real' name='value' />
                  <column datatype='string' name='notes' />
                  <column datatype='string' name='source' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0lbj8dk018c4rt1d2kg8t1wv7pul' name='International_migrants_and_refugees.csv' table='[International_migrants_and_refugees#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
                    <column datatype='integer' name='country_code' ordinal='0' />
                    <column datatype='string' name='region_country_area' ordinal='1' />
                    <column datatype='integer' date-parse-format='yyyy' name='year' ordinal='2' />
                    <column datatype='string' name='series' ordinal='3' />
                    <column datatype='real' name='value' ordinal='4' />
                    <column datatype='string' name='notes' ordinal='5' />
                    <column datatype='string' name='source' ordinal='6' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource inline='true' name='Indicadores Mundiales' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Indicadores mundiales' name='hyper.02tkzk21390wwr18vjk7f1tnp84z'>
            <connection authentication='auth-none' author-locale='es_ES' class='hyper' dbname='C:/Users/Kary/Documents/Mi Repositorio de Tableau/Fuentes de datos/2025.2/es_ES-LATAM/Indicadores Mundiales.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.02tkzk21390wwr18vjk7f1tnp84z' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Año</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Año]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Año</remote-alias>
            <ordinal>0</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Días para iniciar un negocio</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Días para iniciar un negocio]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Días para iniciar un negocio</remote-alias>
            <ordinal>1</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>120</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Emisiones de CO2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Emisiones de CO2]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Emisiones de CO2</remote-alias>
            <ordinal>2</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1233</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Esperanza de vida (hombres)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Esperanza de vida (hombres)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Esperanza de vida (hombres)</remote-alias>
            <ordinal>3</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>44</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Esperanza de vida (mujeres)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Esperanza de vida (mujeres)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Esperanza de vida (mujeres)</remote-alias>
            <ordinal>4</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>48</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facilidad para hacer negocios</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Facilidad para hacer negocios]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Facilidad para hacer negocios</remote-alias>
            <ordinal>5</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>324</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gasto en salud (% del PIB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gasto en salud (% del PIB)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Gasto en salud (% del PIB)</remote-alias>
            <ordinal>6</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>21</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gasto en salud (per cápita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gasto en salud (per cápita)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Gasto en salud (per cápita)</remote-alias>
            <ordinal>7</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>806</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Horas para preparar los impuestos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Horas para preparar los impuestos]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Horas para preparar los impuestos</remote-alias>
            <ordinal>8</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>247</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Interés de préstamos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Interés de préstamos]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Interés de préstamos</remote-alias>
            <ordinal>9</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>314</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PIB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PIB]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PIB</remote-alias>
            <ordinal>10</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1653</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>País/Región</remote-name>
            <remote-type>129</remote-type>
            <local-name>[País/Región]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>País/Región</remote-alias>
            <ordinal>11</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>208</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Población +65</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Población +65]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Población +65</remote-alias>
            <ordinal>12</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>383</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Población 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Población 0-14]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Población 0-14</remote-alias>
            <ordinal>13</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>297</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Población 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Población 15-64]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Población 15-64</remote-alias>
            <ordinal>14</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>203</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Población total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Población total]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Población total</remote-alias>
            <ordinal>15</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2691</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Población urbana</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Población urbana]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Población urbana</remote-alias>
            <ordinal>16</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>773</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Región</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Región]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Región</remote-alias>
            <ordinal>17</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tasa de mortalidad infantil</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tasa de mortalidad infantil]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tasa de mortalidad infantil</remote-alias>
            <ordinal>18</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>123</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tasa de natalidad</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tasa de natalidad]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tasa de natalidad</remote-alias>
            <ordinal>19</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>48</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tasa tributaria empresarial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tasa tributaria empresarial]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tasa tributaria empresarial</remote-alias>
            <ordinal>20</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>382</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Turismo entrante</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Turismo entrante]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Turismo entrante</remote-alias>
            <ordinal>21</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1204</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Turismo saliente</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Turismo saliente]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Turismo saliente</remote-alias>
            <ordinal>22</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1042</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uso de Internet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Uso de Internet]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Uso de Internet</remote-alias>
            <ordinal>23</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>588</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uso de energía</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Uso de energía]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Uso de energía</remote-alias>
            <ordinal>24</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1451</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uso de teléfonos móviles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Uso de teléfonos móviles]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Uso de teléfonos móviles</remote-alias>
            <ordinal>25</ordinal>
            <family>Indicadores Mundiales.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>952</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Migrated Data]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[País/Región]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Datos migrados' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <folders-common>
        <folder name='Actividad económica'>
          <folder-item name='[Días para iniciar un negocio]' type='field' />
          <folder-item name='[Facilidad para hacer negocios]' type='field' />
          <folder-item name='[Horas para preparar los impuestos]' type='field' />
          <folder-item name='[Interés de préstamos]' type='field' />
          <folder-item name='[Tasa tributaria empresarial]' type='field' />
        </folder>
        <folder name='Desarrollo'>
          <folder-item name='[Emisiones de CO2]' type='field' />
          <folder-item name='[PIB]' type='field' />
          <folder-item name='[Turismo entrante]' type='field' />
          <folder-item name='[Turismo saliente]' type='field' />
          <folder-item name='[Uso de Internet]' type='field' />
          <folder-item name='[Uso de energía]' type='field' />
          <folder-item name='[Uso de teléfonos móviles]' type='field' />
        </folder>
        <folder name='Población'>
          <folder-item name='[Población +65]' type='field' />
          <folder-item name='[Población 0-14]' type='field' />
          <folder-item name='[Población 15-64]' type='field' />
          <folder-item name='[Población total]' type='field' />
          <folder-item name='[Población urbana]' type='field' />
          <folder-item name='[Tasa de natalidad]' type='field' />
        </folder>
        <folder name='Salud'>
          <folder-item name='[Esperanza de vida (hombres)]' type='field' />
          <folder-item name='[Esperanza de vida (mujeres)]' type='field' />
          <folder-item name='[Gasto en salud (% del PIB)]' type='field' />
          <folder-item name='[Gasto en salud (per cápita)]' type='field' />
          <folder-item name='[Tasa de mortalidad infantil]' type='field' />
        </folder>
      </folders-common>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estados Unidos&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Datos migrados' id='Migrated Data'>
            <properties context=''>
              <relation connection='hyper.02tkzk21390wwr18vjk7f1tnp84z' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Comparativo'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e6e6e6' fontsize='16'>Indicadores 2020 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='International_migrants_and_refugees' name='federated.1l4sx510lvvcov190txbf16cwi2e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l4sx510lvvcov190txbf16cwi2e'>
            <column caption='Migrantes' datatype='real' name='[Calculation_1275926122927964167]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; THEN [value] ELSE 0 END' />
            </column>
            <column caption='Refugiados' datatype='real' name='[Calculation_1275926122928050184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;Total refugees and people in refugee-like situations (number)&quot; THEN [value] ELSE 0 END' />
            </column>
            <column caption='Asilo' datatype='real' name='[Calculation_1275926122928783369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;Asylum seekers, including pending cases (number)&quot; THEN [value] ELSE 0 END' />
            </column>
            <column caption='Países' datatype='string' name='[Calculation_1275926122935771151]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='CASE [region_country_area]&#13;&#10;    WHEN &apos;Afghanistan&apos; THEN &apos;Afghanistan&apos;&#13;&#10;    WHEN &apos;Albania&apos; THEN &apos;Albania&apos;&#13;&#10;    WHEN &apos;Algeria&apos; THEN &apos;Algeria&apos;&#13;&#10;    WHEN &apos;Andorra&apos; THEN &apos;Andorra&apos;&#13;&#10;    WHEN &apos;Angola&apos; THEN &apos;Angola&apos;&#13;&#10;    WHEN &apos;Antigua and Barbuda&apos; THEN &apos;Antigua and Barbuda&apos;&#13;&#10;    WHEN &apos;Argentina&apos; THEN &apos;Argentina&apos;&#13;&#10;    WHEN &apos;Armenia&apos; THEN &apos;Armenia&apos;&#13;&#10;    WHEN &apos;Australia&apos; THEN &apos;Australia&apos;&#13;&#10;    WHEN &apos;Austria&apos; THEN &apos;Austria&apos;&#13;&#10;    WHEN &apos;Azerbaijan&apos; THEN &apos;Azerbaijan&apos;&#13;&#10;    WHEN &apos;Bahamas&apos; THEN &apos;Bahamas&apos;&#13;&#10;    WHEN &apos;Bahrain&apos; THEN &apos;Bahrain&apos;&#13;&#10;    WHEN &apos;Bangladesh&apos; THEN &apos;Bangladesh&apos;&#13;&#10;    WHEN &apos;Barbados&apos; THEN &apos;Barbados&apos;&#13;&#10;    WHEN &apos;Belarus&apos; THEN &apos;Belarus&apos;&#13;&#10;    WHEN &apos;Belgium&apos; THEN &apos;Belgium&apos;&#13;&#10;    WHEN &apos;Belize&apos; THEN &apos;Belize&apos;&#13;&#10;    WHEN &apos;Benin&apos; THEN &apos;Benin&apos;&#13;&#10;    WHEN &apos;Bhutan&apos; THEN &apos;Bhutan&apos;&#13;&#10;    WHEN &apos;Bolivia (Plurinational State of)&apos; THEN &apos;Bolivia (Plurinational State of)&apos;&#13;&#10;    WHEN &apos;Bosnia and Herzegovina&apos; THEN &apos;Bosnia and Herzegovina&apos;&#13;&#10;    WHEN &apos;Botswana&apos; THEN &apos;Botswana&apos;&#13;&#10;    WHEN &apos;Brazil&apos; THEN &apos;Brazil&apos;&#13;&#10;    WHEN &apos;Brunei Darussalam&apos; THEN &apos;Brunei Darussalam&apos;&#13;&#10;    WHEN &apos;Bulgaria&apos; THEN &apos;Bulgaria&apos;&#13;&#10;    WHEN &apos;Burkina Faso&apos; THEN &apos;Burkina Faso&apos;&#13;&#10;    WHEN &apos;Burundi&apos; THEN &apos;Burundi&apos;&#13;&#10;    WHEN &apos;Cabo Verde&apos; THEN &apos;Cabo Verde&apos;&#13;&#10;    WHEN &apos;Cambodia&apos; THEN &apos;Cambodia&apos;&#13;&#10;    WHEN &apos;Cameroon&apos; THEN &apos;Cameroon&apos;&#13;&#10;    WHEN &apos;Canada&apos; THEN &apos;Canada&apos;&#13;&#10;    WHEN &apos;Central African Republic&apos; THEN &apos;Central African Republic&apos;&#13;&#10;    WHEN &apos;Chad&apos; THEN &apos;Chad&apos;&#13;&#10;    WHEN &apos;Chile&apos; THEN &apos;Chile&apos;&#13;&#10;    WHEN &apos;China&apos; THEN &apos;China&apos;&#13;&#10;    WHEN &apos;Colombia&apos; THEN &apos;Colombia&apos;&#13;&#10;    WHEN &apos;Comoros&apos; THEN &apos;Comoros&apos;&#13;&#10;    WHEN &apos;Congo&apos; THEN &apos;Congo&apos;&#13;&#10;    WHEN &apos;Costa Rica&apos; THEN &apos;Costa Rica&apos;&#13;&#10;    WHEN &apos;Cote dIvoire&apos; THEN &apos;Cote dIvoire&apos;&#13;&#10;    WHEN &apos;Croatia&apos; THEN &apos;Croatia&apos;&#13;&#10;    WHEN &apos;Cuba&apos; THEN &apos;Cuba&apos;&#13;&#10;    WHEN &apos;Cyprus&apos; THEN &apos;Cyprus&apos;&#13;&#10;    WHEN &apos;Czechia&apos; THEN &apos;Czechia&apos;&#13;&#10;    WHEN &apos;Democratic Republic of the Congo&apos; THEN &apos;Democratic Republic of the Congo&apos;&#13;&#10;    WHEN &apos;Denmark&apos; THEN &apos;Denmark&apos;&#13;&#10;    WHEN &apos;Djibouti&apos; THEN &apos;Djibouti&apos;&#13;&#10;    WHEN &apos;Dominica&apos; THEN &apos;Dominica&apos;&#13;&#10;    WHEN &apos;Dominican Republic&apos; THEN &apos;Dominican Republic&apos;&#13;&#10;    WHEN &apos;Ecuador&apos; THEN &apos;Ecuador&apos;&#13;&#10;    WHEN &apos;Egypt&apos; THEN &apos;Egypt&apos;&#13;&#10;    WHEN &apos;El Salvador&apos; THEN &apos;El Salvador&apos;&#13;&#10;    WHEN &apos;Equatorial Guinea&apos; THEN &apos;Equatorial Guinea&apos;&#13;&#10;    WHEN &apos;Eritrea&apos; THEN &apos;Eritrea&apos;&#13;&#10;    WHEN &apos;Estonia&apos; THEN &apos;Estonia&apos;&#13;&#10;    WHEN &apos;Eswatini&apos; THEN &apos;Eswatini&apos;&#13;&#10;    WHEN &apos;Ethiopia&apos; THEN &apos;Ethiopia&apos;&#13;&#10;    WHEN &apos;Fiji&apos; THEN &apos;Fiji&apos;&#13;&#10;    WHEN &apos;Finland&apos; THEN &apos;Finland&apos;&#13;&#10;    WHEN &apos;France&apos; THEN &apos;France&apos;&#13;&#10;    WHEN &apos;Gabon&apos; THEN &apos;Gabon&apos;&#13;&#10;    WHEN &apos;Gambia&apos; THEN &apos;Gambia&apos;&#13;&#10;    WHEN &apos;Georgia&apos; THEN &apos;Georgia&apos;&#13;&#10;    WHEN &apos;Germany&apos; THEN &apos;Germany&apos;&#13;&#10;    WHEN &apos;Ghana&apos; THEN &apos;Ghana&apos;&#13;&#10;    WHEN &apos;Greece&apos; THEN &apos;Greece&apos;&#13;&#10;    WHEN &apos;Grenada&apos; THEN &apos;Grenada&apos;&#13;&#10;    WHEN &apos;Guatemala&apos; THEN &apos;Guatemala&apos;&#13;&#10;    WHEN &apos;Guinea&apos; THEN &apos;Guinea&apos;&#13;&#10;    WHEN &apos;Guinea-Bissau&apos; THEN &apos;Guinea-Bissau&apos;&#13;&#10;    WHEN &apos;Guyana&apos; THEN &apos;Guyana&apos;&#13;&#10;    WHEN &apos;Haiti&apos; THEN &apos;Haiti&apos;&#13;&#10;    WHEN &apos;Honduras&apos; THEN &apos;Honduras&apos;&#13;&#10;    WHEN &apos;Hungary&apos; THEN &apos;Hungary&apos;&#13;&#10;    WHEN &apos;Iceland&apos; THEN &apos;Iceland&apos;&#13;&#10;    WHEN &apos;India&apos; THEN &apos;India&apos;&#13;&#10;    WHEN &apos;Indonesia&apos; THEN &apos;Indonesia&apos;&#13;&#10;    WHEN &apos;Iran (Islamic Republic of)&apos; THEN &apos;Iran (Islamic Republic of)&apos;&#13;&#10;    WHEN &apos;Iraq&apos; THEN &apos;Iraq&apos;&#13;&#10;    WHEN &apos;Ireland&apos; THEN &apos;Ireland&apos;&#13;&#10;    WHEN &apos;Israel&apos; THEN &apos;Israel&apos;&#13;&#10;    WHEN &apos;Italy&apos; THEN &apos;Italy&apos;&#13;&#10;    WHEN &apos;Jamaica&apos; THEN &apos;Jamaica&apos;&#13;&#10;    WHEN &apos;Japan&apos; THEN &apos;Japan&apos;&#13;&#10;    WHEN &apos;Jordan&apos; THEN &apos;Jordan&apos;&#13;&#10;    WHEN &apos;Kazakhstan&apos; THEN &apos;Kazakhstan&apos;&#13;&#10;    WHEN &apos;Kenya&apos; THEN &apos;Kenya&apos;&#13;&#10;    WHEN &apos;Kiribati&apos; THEN &apos;Kiribati&apos;&#13;&#10;    WHEN &apos;Kuwait&apos; THEN &apos;Kuwait&apos;&#13;&#10;    WHEN &apos;Kyrgyzstan&apos; THEN &apos;Kyrgyzstan&apos;&#13;&#10;    WHEN &apos;Lao Peoples Democratic Republic&apos; THEN &apos;Lao Peoples Democratic Republic&apos;&#13;&#10;    WHEN &apos;Latvia&apos; THEN &apos;Latvia&apos;&#13;&#10;    WHEN &apos;Lebanon&apos; THEN &apos;Lebanon&apos;&#13;&#10;    WHEN &apos;Lesotho&apos; THEN &apos;Lesotho&apos;&#13;&#10;    WHEN &apos;Liberia&apos; THEN &apos;Liberia&apos;&#13;&#10;    WHEN &apos;Libya&apos; THEN &apos;Libya&apos;&#13;&#10;    WHEN &apos;Liechtenstein&apos; THEN &apos;Liechtenstein&apos;&#13;&#10;    WHEN &apos;Lithuania&apos; THEN &apos;Lithuania&apos;&#13;&#10;    WHEN &apos;Luxembourg&apos; THEN &apos;Luxembourg&apos;&#13;&#10;    WHEN &apos;Madagascar&apos; THEN &apos;Madagascar&apos;&#13;&#10;    WHEN &apos;Malawi&apos; THEN &apos;Malawi&apos;&#13;&#10;    WHEN &apos;Malaysia&apos; THEN &apos;Malaysia&apos;&#13;&#10;    WHEN &apos;Maldives&apos; THEN &apos;Maldives&apos;&#13;&#10;    WHEN &apos;Mali&apos; THEN &apos;Mali&apos;&#13;&#10;    WHEN &apos;Malta&apos; THEN &apos;Malta&apos;&#13;&#10;    WHEN &apos;Marshall Islands&apos; THEN &apos;Marshall Islands&apos;&#13;&#10;    WHEN &apos;Mauritania&apos; THEN &apos;Mauritania&apos;&#13;&#10;    WHEN &apos;Mauritius&apos; THEN &apos;Mauritius&apos;&#13;&#10;    WHEN &apos;Mexico&apos; THEN &apos;Mexico&apos;&#13;&#10;    WHEN &apos;Micronesia (Federated States of)&apos; THEN &apos;Micronesia (Federated States of)&apos;&#13;&#10;    WHEN &apos;Monaco&apos; THEN &apos;Monaco&apos;&#13;&#10;    WHEN &apos;Mongolia&apos; THEN &apos;Mongolia&apos;&#13;&#10;    WHEN &apos;Montenegro&apos; THEN &apos;Montenegro&apos;&#13;&#10;    WHEN &apos;Morocco&apos; THEN &apos;Morocco&apos;&#13;&#10;    WHEN &apos;Mozambique&apos; THEN &apos;Mozambique&apos;&#13;&#10;    WHEN &apos;Myanmar&apos; THEN &apos;Myanmar&apos;&#13;&#10;    WHEN &apos;Namibia&apos; THEN &apos;Namibia&apos;&#13;&#10;    WHEN &apos;Nauru&apos; THEN &apos;Nauru&apos;&#13;&#10;    WHEN &apos;Nepal&apos; THEN &apos;Nepal&apos;&#13;&#10;    WHEN &apos;Netherlands&apos; THEN &apos;Netherlands&apos;&#13;&#10;    WHEN &apos;New Zealand&apos; THEN &apos;New Zealand&apos;&#13;&#10;    WHEN &apos;Nicaragua&apos; THEN &apos;Nicaragua&apos;&#13;&#10;    WHEN &apos;Niger&apos; THEN &apos;Niger&apos;&#13;&#10;    WHEN &apos;Nigeria&apos; THEN &apos;Nigeria&apos;&#13;&#10;    WHEN &apos;North Macedonia&apos; THEN &apos;North Macedonia&apos;&#13;&#10;    WHEN &apos;Norway&apos; THEN &apos;Norway&apos;&#13;&#10;    WHEN &apos;Oman&apos; THEN &apos;Oman&apos;&#13;&#10;    WHEN &apos;Pakistan&apos; THEN &apos;Pakistan&apos;&#13;&#10;    WHEN &apos;Palau&apos; THEN &apos;Palau&apos;&#13;&#10;    WHEN &apos;Panama&apos; THEN &apos;Panama&apos;&#13;&#10;    WHEN &apos;Papua New Guinea&apos; THEN &apos;Papua New Guinea&apos;&#13;&#10;    WHEN &apos;Paraguay&apos; THEN &apos;Paraguay&apos;&#13;&#10;    WHEN &apos;Peru&apos; THEN &apos;Peru&apos;&#13;&#10;    WHEN &apos;Philippines&apos; THEN &apos;Philippines&apos;&#13;&#10;    WHEN &apos;Poland&apos; THEN &apos;Poland&apos;&#13;&#10;    WHEN &apos;Portugal&apos; THEN &apos;Portugal&apos;&#13;&#10;    WHEN &apos;Qatar&apos; THEN &apos;Qatar&apos;&#13;&#10;    WHEN &apos;Republic of Korea&apos; THEN &apos;Republic of Korea&apos;&#13;&#10;    WHEN &apos;Republic of Moldova&apos; THEN &apos;Republic of Moldova&apos;&#13;&#10;    WHEN &apos;Romania&apos; THEN &apos;Romania&apos;&#13;&#10;    WHEN &apos;Russian Federation&apos; THEN &apos;Russian Federation&apos;&#13;&#10;    WHEN &apos;Rwanda&apos; THEN &apos;Rwanda&apos;&#13;&#10;    WHEN &apos;Saint Kitts and Nevis&apos; THEN &apos;Saint Kitts and Nevis&apos;&#13;&#10;    WHEN &apos;Saint Lucia&apos; THEN &apos;Saint Lucia&apos;&#13;&#10;    WHEN &apos;Saint Vincent and the Grenadines&apos; THEN &apos;Saint Vincent and the Grenadines&apos;&#13;&#10;    WHEN &apos;Samoa&apos; THEN &apos;Samoa&apos;&#13;&#10;    WHEN &apos;San Marino&apos; THEN &apos;San Marino&apos;&#13;&#10;    WHEN &apos;Sao Tome and Principe&apos; THEN &apos;Sao Tome and Principe&apos;&#13;&#10;    WHEN &apos;Saudi Arabia&apos; THEN &apos;Saudi Arabia&apos;&#13;&#10;    WHEN &apos;Senegal&apos; THEN &apos;Senegal&apos;&#13;&#10;    WHEN &apos;Serbia&apos; THEN &apos;Serbia&apos;&#13;&#10;    WHEN &apos;Seychelles&apos; THEN &apos;Seychelles&apos;&#13;&#10;    WHEN &apos;Sierra Leone&apos; THEN &apos;Sierra Leone&apos;&#13;&#10;    WHEN &apos;Singapore&apos; THEN &apos;Singapore&apos;&#13;&#10;    WHEN &apos;Slovakia&apos; THEN &apos;Slovakia&apos;&#13;&#10;    WHEN &apos;Slovenia&apos; THEN &apos;Slovenia&apos;&#13;&#10;    WHEN &apos;Solomon Islands&apos; THEN &apos;Solomon Islands&apos;&#13;&#10;    WHEN &apos;Somalia&apos; THEN &apos;Somalia&apos;&#13;&#10;    WHEN &apos;South Africa&apos; THEN &apos;South Africa&apos;&#13;&#10;    WHEN &apos;South Sudan&apos; THEN &apos;South Sudan&apos;&#13;&#10;    WHEN &apos;Spain&apos; THEN &apos;Spain&apos;&#13;&#10;    WHEN &apos;Sri Lanka&apos; THEN &apos;Sri Lanka&apos;&#13;&#10;    WHEN &apos;State of Palestine&apos; THEN &apos;State of Palestine&apos;&#13;&#10;    WHEN &apos;Sudan&apos; THEN &apos;Sudan&apos;&#13;&#10;    WHEN &apos;Suriname&apos; THEN &apos;Suriname&apos;&#13;&#10;    WHEN &apos;Sweden&apos; THEN &apos;Sweden&apos;&#13;&#10;    WHEN &apos;Switzerland&apos; THEN &apos;Switzerland&apos;&#13;&#10;    WHEN &apos;Syrian Arab Republic&apos; THEN &apos;Syrian Arab Republic&apos;&#13;&#10;    WHEN &apos;Tajikistan&apos; THEN &apos;Tajikistan&apos;&#13;&#10;    WHEN &apos;Thailand&apos; THEN &apos;Thailand&apos;&#13;&#10;    WHEN &apos;Timor-Leste&apos; THEN &apos;Timor-Leste&apos;&#13;&#10;    WHEN &apos;Togo&apos; THEN &apos;Togo&apos;&#13;&#10;    WHEN &apos;Tonga&apos; THEN &apos;Tonga&apos;&#13;&#10;    WHEN &apos;Trinidad and Tobago&apos; THEN &apos;Trinidad and Tobago&apos;&#13;&#10;    WHEN &apos;Tunisia&apos; THEN &apos;Tunisia&apos;&#13;&#10;    WHEN &apos;Turkmenistan&apos; THEN &apos;Turkmenistan&apos;&#13;&#10;    WHEN &apos;Tuvalu&apos; THEN &apos;Tuvalu&apos;&#13;&#10;    WHEN &apos;Uganda&apos; THEN &apos;Uganda&apos;&#13;&#10;    WHEN &apos;Ukraine&apos; THEN &apos;Ukraine&apos;&#13;&#10;    WHEN &apos;United Arab Emirates&apos; THEN &apos;United Arab Emirates&apos;&#13;&#10;    WHEN &apos;United Kingdom&apos; THEN &apos;United Kingdom&apos;&#13;&#10;    WHEN &apos;United Republic of Tanzania&apos; THEN &apos;United Republic of Tanzania&apos;&#13;&#10;    WHEN &apos;United States of America&apos; THEN &apos;United States of America&apos;&#13;&#10;    WHEN &apos;Uruguay&apos; THEN &apos;Uruguay&apos;&#13;&#10;    WHEN &apos;Uzbekistan&apos; THEN &apos;Uzbekistan&apos;&#13;&#10;    WHEN &apos;Vanuatu&apos; THEN &apos;Vanuatu&apos;&#13;&#10;    WHEN &apos;Venezuela (Bolivarian Republic of)&apos; THEN &apos;Venezuela (Bolivarian Republic of)&apos;&#13;&#10;    WHEN &apos;Viet Nam&apos; THEN &apos;Viet Nam&apos;&#13;&#10;    WHEN &apos;Yemen&apos; THEN &apos;Yemen&apos;&#13;&#10;    WHEN &apos;Zambia&apos; THEN &apos;Zambia&apos;&#13;&#10;    WHEN &apos;Zimbabwe&apos; THEN &apos;Zimbabwe&apos;&#13;&#10;    ELSE NULL&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1275926122935771151]' derivation='None' name='[none:Calculation_1275926122935771151:nk]' pivot='key' type='nominal' />
            <column-instance column='[region_country_area]' derivation='None' name='[none:region_country_area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Region Country Area' datatype='string' name='[region_country_area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1275926122927964167]' derivation='Sum' name='[sum:Calculation_1275926122927964167:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1275926122928050184]' derivation='Sum' name='[sum:Calculation_1275926122928050184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1275926122928783369]' derivation='Sum' name='[sum:Calculation_1275926122928783369:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122928783369:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122927964167:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122928050184:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122928783369:qk]&quot;</bucket>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122927964167:qk]&quot;</bucket>
              <bucket>&quot;[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122928050184:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1275926122928783369])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Calculation_1275926122935771151:nk]' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:region_country_area:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Northern America&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Latin America&quot;</bucket>
              <bucket>&quot;Latin America &amp; the Caribbean&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Türkiye&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]</column>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</column>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='width' field='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:region_country_area:nk]' value='48' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l4sx510lvvcov190txbf16cwi2e].[Multiple Values]</rows>
        <cols>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:region_country_area:nk]</cols>
      </table>
      <simple-id uuid='{A595AA60-107F-427E-885D-EC2F6D2BDFBE}' />
    </worksheet>
    <worksheet name='Distribución de género en la migración'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribución de genero en la migración</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='International_migrants_and_refugees' name='federated.1l4sx510lvvcov190txbf16cwi2e' />
          </datasources>
          <datasource-dependencies datasource='federated.1l4sx510lvvcov190txbf16cwi2e'>
            <column caption='Genero' datatype='string' name='[Calculation_1275926122913255424]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([series], &quot;Male&quot;) THEN &quot;Masculino&quot;&#13;&#10;ELSEIF CONTAINS([series], &quot;Female&quot;) THEN &quot;Femenino&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1275926122913255424]' derivation='None' name='[none:Calculation_1275926122913255424:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[pcto:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1275926122913255424:nk]' member='&quot;Femenino&quot;' />
              <groupfilter function='member' level='[none:Calculation_1275926122913255424:nk]' member='&quot;Masculino&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='animation'>
            <format attr='animation-on' value='ao-on' />
            <format attr='animation-style' value='as-phased' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]' />
              <wedge-size column='[federated.1l4sx510lvvcov190txbf16cwi2e].[pcto:sum:value:qk]' />
              <text column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]' />
              <text column='[federated.1l4sx510lvvcov190txbf16cwi2e].[pcto:sum:value:qk]' />
              <text column='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8350828886032104' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]</field>
                  <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]</field>
                  <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[pcto:sum:value:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Femenino&quot;</value>
                <value>8260.1000000000076</value>
                <value>0.48216422571550399</value>
              </tuple>
            </tuple-reference>
            <label-position x='-50' y='-3' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]</field>
                  <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]</field>
                  <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[pcto:sum:value:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Masculino&quot;</value>
                <value>8871.1999999999825</value>
                <value>0.51783577428449612</value>
              </tuple>
            </tuple-reference>
            <label-position x='52' y='2' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{AA155613-853F-4E20-BD7D-C39B653FCD18}' />
    </worksheet>
    <worksheet name='KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='system-ui,ui-sans-serif,-apple-system,BlinkMacSystemFont,sans-serif,Inter,NotoSansHans' fontsize='12'>Número Total de Migrantes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='International_migrants_and_refugees' name='federated.1l4sx510lvvcov190txbf16cwi2e' />
          </datasources>
          <datasource-dependencies datasource='federated.1l4sx510lvvcov190txbf16cwi2e'>
            <column caption='Total Migrantes' datatype='real' name='[Calculation_1275926122990092313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; &#13;&#10;THEN [value] END' />
            </column>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1275926122990092313]' derivation='Sum' name='[sum:Calculation_1275926122990092313:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]' included-values='in-range'>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='normal' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='cols' value='#f5f5f5' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Arial Rounded MT Bold' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122990092313:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='6.5326151847839355' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7B9CF618-B8EC-4823-8318-63C9E11C2977}' />
    </worksheet>
    <worksheet name='KPI_2020-2023'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='system-ui,ui-sans-serif,-apple-system,BlinkMacSystemFont,sans-serif,Inter,NotoSansHans' fontsize='24'>Análisis de Migrantes 2020-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='International_migrants_and_refugees' name='federated.1l4sx510lvvcov190txbf16cwi2e' />
          </datasources>
          <datasource-dependencies datasource='federated.1l4sx510lvvcov190txbf16cwi2e'>
            <column caption='Total Migrantes' datatype='real' name='[Calculation_1275926122990092313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; &#13;&#10;THEN [value] END' />
            </column>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1275926122990092313]' derivation='Sum' name='[sum:Calculation_1275926122990092313:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='normal' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='cols' value='#f5f5f5' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Arial Rounded MT Bold' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122990092313:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='6.5326151847839355' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1A49FADE-A048-4D95-B98E-8A8D9BC6F341}' />
    </worksheet>
    <worksheet name='Mapa de Arbol'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Benton Sans Book'>Ranking y Distribución de la Población Migrante por País</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='International_migrants_and_refugees' name='federated.1l4sx510lvvcov190txbf16cwi2e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l4sx510lvvcov190txbf16cwi2e'>
            <column caption='Migrantes' datatype='real' name='[Calculation_1275926122927964167]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; THEN [value] ELSE 0 END' />
            </column>
            <column caption='Países' datatype='string' name='[Calculation_1275926122935771151]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='CASE [region_country_area]&#13;&#10;    WHEN &apos;Afghanistan&apos; THEN &apos;Afghanistan&apos;&#13;&#10;    WHEN &apos;Albania&apos; THEN &apos;Albania&apos;&#13;&#10;    WHEN &apos;Algeria&apos; THEN &apos;Algeria&apos;&#13;&#10;    WHEN &apos;Andorra&apos; THEN &apos;Andorra&apos;&#13;&#10;    WHEN &apos;Angola&apos; THEN &apos;Angola&apos;&#13;&#10;    WHEN &apos;Antigua and Barbuda&apos; THEN &apos;Antigua and Barbuda&apos;&#13;&#10;    WHEN &apos;Argentina&apos; THEN &apos;Argentina&apos;&#13;&#10;    WHEN &apos;Armenia&apos; THEN &apos;Armenia&apos;&#13;&#10;    WHEN &apos;Australia&apos; THEN &apos;Australia&apos;&#13;&#10;    WHEN &apos;Austria&apos; THEN &apos;Austria&apos;&#13;&#10;    WHEN &apos;Azerbaijan&apos; THEN &apos;Azerbaijan&apos;&#13;&#10;    WHEN &apos;Bahamas&apos; THEN &apos;Bahamas&apos;&#13;&#10;    WHEN &apos;Bahrain&apos; THEN &apos;Bahrain&apos;&#13;&#10;    WHEN &apos;Bangladesh&apos; THEN &apos;Bangladesh&apos;&#13;&#10;    WHEN &apos;Barbados&apos; THEN &apos;Barbados&apos;&#13;&#10;    WHEN &apos;Belarus&apos; THEN &apos;Belarus&apos;&#13;&#10;    WHEN &apos;Belgium&apos; THEN &apos;Belgium&apos;&#13;&#10;    WHEN &apos;Belize&apos; THEN &apos;Belize&apos;&#13;&#10;    WHEN &apos;Benin&apos; THEN &apos;Benin&apos;&#13;&#10;    WHEN &apos;Bhutan&apos; THEN &apos;Bhutan&apos;&#13;&#10;    WHEN &apos;Bolivia (Plurinational State of)&apos; THEN &apos;Bolivia (Plurinational State of)&apos;&#13;&#10;    WHEN &apos;Bosnia and Herzegovina&apos; THEN &apos;Bosnia and Herzegovina&apos;&#13;&#10;    WHEN &apos;Botswana&apos; THEN &apos;Botswana&apos;&#13;&#10;    WHEN &apos;Brazil&apos; THEN &apos;Brazil&apos;&#13;&#10;    WHEN &apos;Brunei Darussalam&apos; THEN &apos;Brunei Darussalam&apos;&#13;&#10;    WHEN &apos;Bulgaria&apos; THEN &apos;Bulgaria&apos;&#13;&#10;    WHEN &apos;Burkina Faso&apos; THEN &apos;Burkina Faso&apos;&#13;&#10;    WHEN &apos;Burundi&apos; THEN &apos;Burundi&apos;&#13;&#10;    WHEN &apos;Cabo Verde&apos; THEN &apos;Cabo Verde&apos;&#13;&#10;    WHEN &apos;Cambodia&apos; THEN &apos;Cambodia&apos;&#13;&#10;    WHEN &apos;Cameroon&apos; THEN &apos;Cameroon&apos;&#13;&#10;    WHEN &apos;Canada&apos; THEN &apos;Canada&apos;&#13;&#10;    WHEN &apos;Central African Republic&apos; THEN &apos;Central African Republic&apos;&#13;&#10;    WHEN &apos;Chad&apos; THEN &apos;Chad&apos;&#13;&#10;    WHEN &apos;Chile&apos; THEN &apos;Chile&apos;&#13;&#10;    WHEN &apos;China&apos; THEN &apos;China&apos;&#13;&#10;    WHEN &apos;Colombia&apos; THEN &apos;Colombia&apos;&#13;&#10;    WHEN &apos;Comoros&apos; THEN &apos;Comoros&apos;&#13;&#10;    WHEN &apos;Congo&apos; THEN &apos;Congo&apos;&#13;&#10;    WHEN &apos;Costa Rica&apos; THEN &apos;Costa Rica&apos;&#13;&#10;    WHEN &apos;Cote dIvoire&apos; THEN &apos;Cote dIvoire&apos;&#13;&#10;    WHEN &apos;Croatia&apos; THEN &apos;Croatia&apos;&#13;&#10;    WHEN &apos;Cuba&apos; THEN &apos;Cuba&apos;&#13;&#10;    WHEN &apos;Cyprus&apos; THEN &apos;Cyprus&apos;&#13;&#10;    WHEN &apos;Czechia&apos; THEN &apos;Czechia&apos;&#13;&#10;    WHEN &apos;Democratic Republic of the Congo&apos; THEN &apos;Democratic Republic of the Congo&apos;&#13;&#10;    WHEN &apos;Denmark&apos; THEN &apos;Denmark&apos;&#13;&#10;    WHEN &apos;Djibouti&apos; THEN &apos;Djibouti&apos;&#13;&#10;    WHEN &apos;Dominica&apos; THEN &apos;Dominica&apos;&#13;&#10;    WHEN &apos;Dominican Republic&apos; THEN &apos;Dominican Republic&apos;&#13;&#10;    WHEN &apos;Ecuador&apos; THEN &apos;Ecuador&apos;&#13;&#10;    WHEN &apos;Egypt&apos; THEN &apos;Egypt&apos;&#13;&#10;    WHEN &apos;El Salvador&apos; THEN &apos;El Salvador&apos;&#13;&#10;    WHEN &apos;Equatorial Guinea&apos; THEN &apos;Equatorial Guinea&apos;&#13;&#10;    WHEN &apos;Eritrea&apos; THEN &apos;Eritrea&apos;&#13;&#10;    WHEN &apos;Estonia&apos; THEN &apos;Estonia&apos;&#13;&#10;    WHEN &apos;Eswatini&apos; THEN &apos;Eswatini&apos;&#13;&#10;    WHEN &apos;Ethiopia&apos; THEN &apos;Ethiopia&apos;&#13;&#10;    WHEN &apos;Fiji&apos; THEN &apos;Fiji&apos;&#13;&#10;    WHEN &apos;Finland&apos; THEN &apos;Finland&apos;&#13;&#10;    WHEN &apos;France&apos; THEN &apos;France&apos;&#13;&#10;    WHEN &apos;Gabon&apos; THEN &apos;Gabon&apos;&#13;&#10;    WHEN &apos;Gambia&apos; THEN &apos;Gambia&apos;&#13;&#10;    WHEN &apos;Georgia&apos; THEN &apos;Georgia&apos;&#13;&#10;    WHEN &apos;Germany&apos; THEN &apos;Germany&apos;&#13;&#10;    WHEN &apos;Ghana&apos; THEN &apos;Ghana&apos;&#13;&#10;    WHEN &apos;Greece&apos; THEN &apos;Greece&apos;&#13;&#10;    WHEN &apos;Grenada&apos; THEN &apos;Grenada&apos;&#13;&#10;    WHEN &apos;Guatemala&apos; THEN &apos;Guatemala&apos;&#13;&#10;    WHEN &apos;Guinea&apos; THEN &apos;Guinea&apos;&#13;&#10;    WHEN &apos;Guinea-Bissau&apos; THEN &apos;Guinea-Bissau&apos;&#13;&#10;    WHEN &apos;Guyana&apos; THEN &apos;Guyana&apos;&#13;&#10;    WHEN &apos;Haiti&apos; THEN &apos;Haiti&apos;&#13;&#10;    WHEN &apos;Honduras&apos; THEN &apos;Honduras&apos;&#13;&#10;    WHEN &apos;Hungary&apos; THEN &apos;Hungary&apos;&#13;&#10;    WHEN &apos;Iceland&apos; THEN &apos;Iceland&apos;&#13;&#10;    WHEN &apos;India&apos; THEN &apos;India&apos;&#13;&#10;    WHEN &apos;Indonesia&apos; THEN &apos;Indonesia&apos;&#13;&#10;    WHEN &apos;Iran (Islamic Republic of)&apos; THEN &apos;Iran (Islamic Republic of)&apos;&#13;&#10;    WHEN &apos;Iraq&apos; THEN &apos;Iraq&apos;&#13;&#10;    WHEN &apos;Ireland&apos; THEN &apos;Ireland&apos;&#13;&#10;    WHEN &apos;Israel&apos; THEN &apos;Israel&apos;&#13;&#10;    WHEN &apos;Italy&apos; THEN &apos;Italy&apos;&#13;&#10;    WHEN &apos;Jamaica&apos; THEN &apos;Jamaica&apos;&#13;&#10;    WHEN &apos;Japan&apos; THEN &apos;Japan&apos;&#13;&#10;    WHEN &apos;Jordan&apos; THEN &apos;Jordan&apos;&#13;&#10;    WHEN &apos;Kazakhstan&apos; THEN &apos;Kazakhstan&apos;&#13;&#10;    WHEN &apos;Kenya&apos; THEN &apos;Kenya&apos;&#13;&#10;    WHEN &apos;Kiribati&apos; THEN &apos;Kiribati&apos;&#13;&#10;    WHEN &apos;Kuwait&apos; THEN &apos;Kuwait&apos;&#13;&#10;    WHEN &apos;Kyrgyzstan&apos; THEN &apos;Kyrgyzstan&apos;&#13;&#10;    WHEN &apos;Lao Peoples Democratic Republic&apos; THEN &apos;Lao Peoples Democratic Republic&apos;&#13;&#10;    WHEN &apos;Latvia&apos; THEN &apos;Latvia&apos;&#13;&#10;    WHEN &apos;Lebanon&apos; THEN &apos;Lebanon&apos;&#13;&#10;    WHEN &apos;Lesotho&apos; THEN &apos;Lesotho&apos;&#13;&#10;    WHEN &apos;Liberia&apos; THEN &apos;Liberia&apos;&#13;&#10;    WHEN &apos;Libya&apos; THEN &apos;Libya&apos;&#13;&#10;    WHEN &apos;Liechtenstein&apos; THEN &apos;Liechtenstein&apos;&#13;&#10;    WHEN &apos;Lithuania&apos; THEN &apos;Lithuania&apos;&#13;&#10;    WHEN &apos;Luxembourg&apos; THEN &apos;Luxembourg&apos;&#13;&#10;    WHEN &apos;Madagascar&apos; THEN &apos;Madagascar&apos;&#13;&#10;    WHEN &apos;Malawi&apos; THEN &apos;Malawi&apos;&#13;&#10;    WHEN &apos;Malaysia&apos; THEN &apos;Malaysia&apos;&#13;&#10;    WHEN &apos;Maldives&apos; THEN &apos;Maldives&apos;&#13;&#10;    WHEN &apos;Mali&apos; THEN &apos;Mali&apos;&#13;&#10;    WHEN &apos;Malta&apos; THEN &apos;Malta&apos;&#13;&#10;    WHEN &apos;Marshall Islands&apos; THEN &apos;Marshall Islands&apos;&#13;&#10;    WHEN &apos;Mauritania&apos; THEN &apos;Mauritania&apos;&#13;&#10;    WHEN &apos;Mauritius&apos; THEN &apos;Mauritius&apos;&#13;&#10;    WHEN &apos;Mexico&apos; THEN &apos;Mexico&apos;&#13;&#10;    WHEN &apos;Micronesia (Federated States of)&apos; THEN &apos;Micronesia (Federated States of)&apos;&#13;&#10;    WHEN &apos;Monaco&apos; THEN &apos;Monaco&apos;&#13;&#10;    WHEN &apos;Mongolia&apos; THEN &apos;Mongolia&apos;&#13;&#10;    WHEN &apos;Montenegro&apos; THEN &apos;Montenegro&apos;&#13;&#10;    WHEN &apos;Morocco&apos; THEN &apos;Morocco&apos;&#13;&#10;    WHEN &apos;Mozambique&apos; THEN &apos;Mozambique&apos;&#13;&#10;    WHEN &apos;Myanmar&apos; THEN &apos;Myanmar&apos;&#13;&#10;    WHEN &apos;Namibia&apos; THEN &apos;Namibia&apos;&#13;&#10;    WHEN &apos;Nauru&apos; THEN &apos;Nauru&apos;&#13;&#10;    WHEN &apos;Nepal&apos; THEN &apos;Nepal&apos;&#13;&#10;    WHEN &apos;Netherlands&apos; THEN &apos;Netherlands&apos;&#13;&#10;    WHEN &apos;New Zealand&apos; THEN &apos;New Zealand&apos;&#13;&#10;    WHEN &apos;Nicaragua&apos; THEN &apos;Nicaragua&apos;&#13;&#10;    WHEN &apos;Niger&apos; THEN &apos;Niger&apos;&#13;&#10;    WHEN &apos;Nigeria&apos; THEN &apos;Nigeria&apos;&#13;&#10;    WHEN &apos;North Macedonia&apos; THEN &apos;North Macedonia&apos;&#13;&#10;    WHEN &apos;Norway&apos; THEN &apos;Norway&apos;&#13;&#10;    WHEN &apos;Oman&apos; THEN &apos;Oman&apos;&#13;&#10;    WHEN &apos;Pakistan&apos; THEN &apos;Pakistan&apos;&#13;&#10;    WHEN &apos;Palau&apos; THEN &apos;Palau&apos;&#13;&#10;    WHEN &apos;Panama&apos; THEN &apos;Panama&apos;&#13;&#10;    WHEN &apos;Papua New Guinea&apos; THEN &apos;Papua New Guinea&apos;&#13;&#10;    WHEN &apos;Paraguay&apos; THEN &apos;Paraguay&apos;&#13;&#10;    WHEN &apos;Peru&apos; THEN &apos;Peru&apos;&#13;&#10;    WHEN &apos;Philippines&apos; THEN &apos;Philippines&apos;&#13;&#10;    WHEN &apos;Poland&apos; THEN &apos;Poland&apos;&#13;&#10;    WHEN &apos;Portugal&apos; THEN &apos;Portugal&apos;&#13;&#10;    WHEN &apos;Qatar&apos; THEN &apos;Qatar&apos;&#13;&#10;    WHEN &apos;Republic of Korea&apos; THEN &apos;Republic of Korea&apos;&#13;&#10;    WHEN &apos;Republic of Moldova&apos; THEN &apos;Republic of Moldova&apos;&#13;&#10;    WHEN &apos;Romania&apos; THEN &apos;Romania&apos;&#13;&#10;    WHEN &apos;Russian Federation&apos; THEN &apos;Russian Federation&apos;&#13;&#10;    WHEN &apos;Rwanda&apos; THEN &apos;Rwanda&apos;&#13;&#10;    WHEN &apos;Saint Kitts and Nevis&apos; THEN &apos;Saint Kitts and Nevis&apos;&#13;&#10;    WHEN &apos;Saint Lucia&apos; THEN &apos;Saint Lucia&apos;&#13;&#10;    WHEN &apos;Saint Vincent and the Grenadines&apos; THEN &apos;Saint Vincent and the Grenadines&apos;&#13;&#10;    WHEN &apos;Samoa&apos; THEN &apos;Samoa&apos;&#13;&#10;    WHEN &apos;San Marino&apos; THEN &apos;San Marino&apos;&#13;&#10;    WHEN &apos;Sao Tome and Principe&apos; THEN &apos;Sao Tome and Principe&apos;&#13;&#10;    WHEN &apos;Saudi Arabia&apos; THEN &apos;Saudi Arabia&apos;&#13;&#10;    WHEN &apos;Senegal&apos; THEN &apos;Senegal&apos;&#13;&#10;    WHEN &apos;Serbia&apos; THEN &apos;Serbia&apos;&#13;&#10;    WHEN &apos;Seychelles&apos; THEN &apos;Seychelles&apos;&#13;&#10;    WHEN &apos;Sierra Leone&apos; THEN &apos;Sierra Leone&apos;&#13;&#10;    WHEN &apos;Singapore&apos; THEN &apos;Singapore&apos;&#13;&#10;    WHEN &apos;Slovakia&apos; THEN &apos;Slovakia&apos;&#13;&#10;    WHEN &apos;Slovenia&apos; THEN &apos;Slovenia&apos;&#13;&#10;    WHEN &apos;Solomon Islands&apos; THEN &apos;Solomon Islands&apos;&#13;&#10;    WHEN &apos;Somalia&apos; THEN &apos;Somalia&apos;&#13;&#10;    WHEN &apos;South Africa&apos; THEN &apos;South Africa&apos;&#13;&#10;    WHEN &apos;South Sudan&apos; THEN &apos;South Sudan&apos;&#13;&#10;    WHEN &apos;Spain&apos; THEN &apos;Spain&apos;&#13;&#10;    WHEN &apos;Sri Lanka&apos; THEN &apos;Sri Lanka&apos;&#13;&#10;    WHEN &apos;State of Palestine&apos; THEN &apos;State of Palestine&apos;&#13;&#10;    WHEN &apos;Sudan&apos; THEN &apos;Sudan&apos;&#13;&#10;    WHEN &apos;Suriname&apos; THEN &apos;Suriname&apos;&#13;&#10;    WHEN &apos;Sweden&apos; THEN &apos;Sweden&apos;&#13;&#10;    WHEN &apos;Switzerland&apos; THEN &apos;Switzerland&apos;&#13;&#10;    WHEN &apos;Syrian Arab Republic&apos; THEN &apos;Syrian Arab Republic&apos;&#13;&#10;    WHEN &apos;Tajikistan&apos; THEN &apos;Tajikistan&apos;&#13;&#10;    WHEN &apos;Thailand&apos; THEN &apos;Thailand&apos;&#13;&#10;    WHEN &apos;Timor-Leste&apos; THEN &apos;Timor-Leste&apos;&#13;&#10;    WHEN &apos;Togo&apos; THEN &apos;Togo&apos;&#13;&#10;    WHEN &apos;Tonga&apos; THEN &apos;Tonga&apos;&#13;&#10;    WHEN &apos;Trinidad and Tobago&apos; THEN &apos;Trinidad and Tobago&apos;&#13;&#10;    WHEN &apos;Tunisia&apos; THEN &apos;Tunisia&apos;&#13;&#10;    WHEN &apos;Turkmenistan&apos; THEN &apos;Turkmenistan&apos;&#13;&#10;    WHEN &apos;Tuvalu&apos; THEN &apos;Tuvalu&apos;&#13;&#10;    WHEN &apos;Uganda&apos; THEN &apos;Uganda&apos;&#13;&#10;    WHEN &apos;Ukraine&apos; THEN &apos;Ukraine&apos;&#13;&#10;    WHEN &apos;United Arab Emirates&apos; THEN &apos;United Arab Emirates&apos;&#13;&#10;    WHEN &apos;United Kingdom&apos; THEN &apos;United Kingdom&apos;&#13;&#10;    WHEN &apos;United Republic of Tanzania&apos; THEN &apos;United Republic of Tanzania&apos;&#13;&#10;    WHEN &apos;United States of America&apos; THEN &apos;United States of America&apos;&#13;&#10;    WHEN &apos;Uruguay&apos; THEN &apos;Uruguay&apos;&#13;&#10;    WHEN &apos;Uzbekistan&apos; THEN &apos;Uzbekistan&apos;&#13;&#10;    WHEN &apos;Vanuatu&apos; THEN &apos;Vanuatu&apos;&#13;&#10;    WHEN &apos;Venezuela (Bolivarian Republic of)&apos; THEN &apos;Venezuela (Bolivarian Republic of)&apos;&#13;&#10;    WHEN &apos;Viet Nam&apos; THEN &apos;Viet Nam&apos;&#13;&#10;    WHEN &apos;Yemen&apos; THEN &apos;Yemen&apos;&#13;&#10;    WHEN &apos;Zambia&apos; THEN &apos;Zambia&apos;&#13;&#10;    WHEN &apos;Zimbabwe&apos; THEN &apos;Zimbabwe&apos;&#13;&#10;    ELSE NULL&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1275926122935771151]' derivation='None' name='[none:Calculation_1275926122935771151:nk]' pivot='key' type='nominal' />
            <column caption='Region Country Area' datatype='string' name='[region_country_area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1275926122927964167])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bahamas&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cabo Verde&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Congo&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Gambia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Republic of Moldova&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Saint Lucia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;State of Palestine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Timor-Leste&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;United States of America&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Viet Nam&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='343' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]' />
              <color column='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]' />
              <text column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF32482D-176C-42F9-AD36-4891E197A84A}' />
    </worksheet>
    <worksheet name='Personas de Preocupación'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Migrantes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='International_migrants_and_refugees' name='federated.1l4sx510lvvcov190txbf16cwi2e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l4sx510lvvcov190txbf16cwi2e'>
            <column caption='Países' datatype='string' name='[Calculation_1275926122935771151]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='CASE [region_country_area]&#13;&#10;    WHEN &apos;Afghanistan&apos; THEN &apos;Afghanistan&apos;&#13;&#10;    WHEN &apos;Albania&apos; THEN &apos;Albania&apos;&#13;&#10;    WHEN &apos;Algeria&apos; THEN &apos;Algeria&apos;&#13;&#10;    WHEN &apos;Andorra&apos; THEN &apos;Andorra&apos;&#13;&#10;    WHEN &apos;Angola&apos; THEN &apos;Angola&apos;&#13;&#10;    WHEN &apos;Antigua and Barbuda&apos; THEN &apos;Antigua and Barbuda&apos;&#13;&#10;    WHEN &apos;Argentina&apos; THEN &apos;Argentina&apos;&#13;&#10;    WHEN &apos;Armenia&apos; THEN &apos;Armenia&apos;&#13;&#10;    WHEN &apos;Australia&apos; THEN &apos;Australia&apos;&#13;&#10;    WHEN &apos;Austria&apos; THEN &apos;Austria&apos;&#13;&#10;    WHEN &apos;Azerbaijan&apos; THEN &apos;Azerbaijan&apos;&#13;&#10;    WHEN &apos;Bahamas&apos; THEN &apos;Bahamas&apos;&#13;&#10;    WHEN &apos;Bahrain&apos; THEN &apos;Bahrain&apos;&#13;&#10;    WHEN &apos;Bangladesh&apos; THEN &apos;Bangladesh&apos;&#13;&#10;    WHEN &apos;Barbados&apos; THEN &apos;Barbados&apos;&#13;&#10;    WHEN &apos;Belarus&apos; THEN &apos;Belarus&apos;&#13;&#10;    WHEN &apos;Belgium&apos; THEN &apos;Belgium&apos;&#13;&#10;    WHEN &apos;Belize&apos; THEN &apos;Belize&apos;&#13;&#10;    WHEN &apos;Benin&apos; THEN &apos;Benin&apos;&#13;&#10;    WHEN &apos;Bhutan&apos; THEN &apos;Bhutan&apos;&#13;&#10;    WHEN &apos;Bolivia (Plurinational State of)&apos; THEN &apos;Bolivia (Plurinational State of)&apos;&#13;&#10;    WHEN &apos;Bosnia and Herzegovina&apos; THEN &apos;Bosnia and Herzegovina&apos;&#13;&#10;    WHEN &apos;Botswana&apos; THEN &apos;Botswana&apos;&#13;&#10;    WHEN &apos;Brazil&apos; THEN &apos;Brazil&apos;&#13;&#10;    WHEN &apos;Brunei Darussalam&apos; THEN &apos;Brunei Darussalam&apos;&#13;&#10;    WHEN &apos;Bulgaria&apos; THEN &apos;Bulgaria&apos;&#13;&#10;    WHEN &apos;Burkina Faso&apos; THEN &apos;Burkina Faso&apos;&#13;&#10;    WHEN &apos;Burundi&apos; THEN &apos;Burundi&apos;&#13;&#10;    WHEN &apos;Cabo Verde&apos; THEN &apos;Cabo Verde&apos;&#13;&#10;    WHEN &apos;Cambodia&apos; THEN &apos;Cambodia&apos;&#13;&#10;    WHEN &apos;Cameroon&apos; THEN &apos;Cameroon&apos;&#13;&#10;    WHEN &apos;Canada&apos; THEN &apos;Canada&apos;&#13;&#10;    WHEN &apos;Central African Republic&apos; THEN &apos;Central African Republic&apos;&#13;&#10;    WHEN &apos;Chad&apos; THEN &apos;Chad&apos;&#13;&#10;    WHEN &apos;Chile&apos; THEN &apos;Chile&apos;&#13;&#10;    WHEN &apos;China&apos; THEN &apos;China&apos;&#13;&#10;    WHEN &apos;Colombia&apos; THEN &apos;Colombia&apos;&#13;&#10;    WHEN &apos;Comoros&apos; THEN &apos;Comoros&apos;&#13;&#10;    WHEN &apos;Congo&apos; THEN &apos;Congo&apos;&#13;&#10;    WHEN &apos;Costa Rica&apos; THEN &apos;Costa Rica&apos;&#13;&#10;    WHEN &apos;Cote dIvoire&apos; THEN &apos;Cote dIvoire&apos;&#13;&#10;    WHEN &apos;Croatia&apos; THEN &apos;Croatia&apos;&#13;&#10;    WHEN &apos;Cuba&apos; THEN &apos;Cuba&apos;&#13;&#10;    WHEN &apos;Cyprus&apos; THEN &apos;Cyprus&apos;&#13;&#10;    WHEN &apos;Czechia&apos; THEN &apos;Czechia&apos;&#13;&#10;    WHEN &apos;Democratic Republic of the Congo&apos; THEN &apos;Democratic Republic of the Congo&apos;&#13;&#10;    WHEN &apos;Denmark&apos; THEN &apos;Denmark&apos;&#13;&#10;    WHEN &apos;Djibouti&apos; THEN &apos;Djibouti&apos;&#13;&#10;    WHEN &apos;Dominica&apos; THEN &apos;Dominica&apos;&#13;&#10;    WHEN &apos;Dominican Republic&apos; THEN &apos;Dominican Republic&apos;&#13;&#10;    WHEN &apos;Ecuador&apos; THEN &apos;Ecuador&apos;&#13;&#10;    WHEN &apos;Egypt&apos; THEN &apos;Egypt&apos;&#13;&#10;    WHEN &apos;El Salvador&apos; THEN &apos;El Salvador&apos;&#13;&#10;    WHEN &apos;Equatorial Guinea&apos; THEN &apos;Equatorial Guinea&apos;&#13;&#10;    WHEN &apos;Eritrea&apos; THEN &apos;Eritrea&apos;&#13;&#10;    WHEN &apos;Estonia&apos; THEN &apos;Estonia&apos;&#13;&#10;    WHEN &apos;Eswatini&apos; THEN &apos;Eswatini&apos;&#13;&#10;    WHEN &apos;Ethiopia&apos; THEN &apos;Ethiopia&apos;&#13;&#10;    WHEN &apos;Fiji&apos; THEN &apos;Fiji&apos;&#13;&#10;    WHEN &apos;Finland&apos; THEN &apos;Finland&apos;&#13;&#10;    WHEN &apos;France&apos; THEN &apos;France&apos;&#13;&#10;    WHEN &apos;Gabon&apos; THEN &apos;Gabon&apos;&#13;&#10;    WHEN &apos;Gambia&apos; THEN &apos;Gambia&apos;&#13;&#10;    WHEN &apos;Georgia&apos; THEN &apos;Georgia&apos;&#13;&#10;    WHEN &apos;Germany&apos; THEN &apos;Germany&apos;&#13;&#10;    WHEN &apos;Ghana&apos; THEN &apos;Ghana&apos;&#13;&#10;    WHEN &apos;Greece&apos; THEN &apos;Greece&apos;&#13;&#10;    WHEN &apos;Grenada&apos; THEN &apos;Grenada&apos;&#13;&#10;    WHEN &apos;Guatemala&apos; THEN &apos;Guatemala&apos;&#13;&#10;    WHEN &apos;Guinea&apos; THEN &apos;Guinea&apos;&#13;&#10;    WHEN &apos;Guinea-Bissau&apos; THEN &apos;Guinea-Bissau&apos;&#13;&#10;    WHEN &apos;Guyana&apos; THEN &apos;Guyana&apos;&#13;&#10;    WHEN &apos;Haiti&apos; THEN &apos;Haiti&apos;&#13;&#10;    WHEN &apos;Honduras&apos; THEN &apos;Honduras&apos;&#13;&#10;    WHEN &apos;Hungary&apos; THEN &apos;Hungary&apos;&#13;&#10;    WHEN &apos;Iceland&apos; THEN &apos;Iceland&apos;&#13;&#10;    WHEN &apos;India&apos; THEN &apos;India&apos;&#13;&#10;    WHEN &apos;Indonesia&apos; THEN &apos;Indonesia&apos;&#13;&#10;    WHEN &apos;Iran (Islamic Republic of)&apos; THEN &apos;Iran (Islamic Republic of)&apos;&#13;&#10;    WHEN &apos;Iraq&apos; THEN &apos;Iraq&apos;&#13;&#10;    WHEN &apos;Ireland&apos; THEN &apos;Ireland&apos;&#13;&#10;    WHEN &apos;Israel&apos; THEN &apos;Israel&apos;&#13;&#10;    WHEN &apos;Italy&apos; THEN &apos;Italy&apos;&#13;&#10;    WHEN &apos;Jamaica&apos; THEN &apos;Jamaica&apos;&#13;&#10;    WHEN &apos;Japan&apos; THEN &apos;Japan&apos;&#13;&#10;    WHEN &apos;Jordan&apos; THEN &apos;Jordan&apos;&#13;&#10;    WHEN &apos;Kazakhstan&apos; THEN &apos;Kazakhstan&apos;&#13;&#10;    WHEN &apos;Kenya&apos; THEN &apos;Kenya&apos;&#13;&#10;    WHEN &apos;Kiribati&apos; THEN &apos;Kiribati&apos;&#13;&#10;    WHEN &apos;Kuwait&apos; THEN &apos;Kuwait&apos;&#13;&#10;    WHEN &apos;Kyrgyzstan&apos; THEN &apos;Kyrgyzstan&apos;&#13;&#10;    WHEN &apos;Lao Peoples Democratic Republic&apos; THEN &apos;Lao Peoples Democratic Republic&apos;&#13;&#10;    WHEN &apos;Latvia&apos; THEN &apos;Latvia&apos;&#13;&#10;    WHEN &apos;Lebanon&apos; THEN &apos;Lebanon&apos;&#13;&#10;    WHEN &apos;Lesotho&apos; THEN &apos;Lesotho&apos;&#13;&#10;    WHEN &apos;Liberia&apos; THEN &apos;Liberia&apos;&#13;&#10;    WHEN &apos;Libya&apos; THEN &apos;Libya&apos;&#13;&#10;    WHEN &apos;Liechtenstein&apos; THEN &apos;Liechtenstein&apos;&#13;&#10;    WHEN &apos;Lithuania&apos; THEN &apos;Lithuania&apos;&#13;&#10;    WHEN &apos;Luxembourg&apos; THEN &apos;Luxembourg&apos;&#13;&#10;    WHEN &apos;Madagascar&apos; THEN &apos;Madagascar&apos;&#13;&#10;    WHEN &apos;Malawi&apos; THEN &apos;Malawi&apos;&#13;&#10;    WHEN &apos;Malaysia&apos; THEN &apos;Malaysia&apos;&#13;&#10;    WHEN &apos;Maldives&apos; THEN &apos;Maldives&apos;&#13;&#10;    WHEN &apos;Mali&apos; THEN &apos;Mali&apos;&#13;&#10;    WHEN &apos;Malta&apos; THEN &apos;Malta&apos;&#13;&#10;    WHEN &apos;Marshall Islands&apos; THEN &apos;Marshall Islands&apos;&#13;&#10;    WHEN &apos;Mauritania&apos; THEN &apos;Mauritania&apos;&#13;&#10;    WHEN &apos;Mauritius&apos; THEN &apos;Mauritius&apos;&#13;&#10;    WHEN &apos;Mexico&apos; THEN &apos;Mexico&apos;&#13;&#10;    WHEN &apos;Micronesia (Federated States of)&apos; THEN &apos;Micronesia (Federated States of)&apos;&#13;&#10;    WHEN &apos;Monaco&apos; THEN &apos;Monaco&apos;&#13;&#10;    WHEN &apos;Mongolia&apos; THEN &apos;Mongolia&apos;&#13;&#10;    WHEN &apos;Montenegro&apos; THEN &apos;Montenegro&apos;&#13;&#10;    WHEN &apos;Morocco&apos; THEN &apos;Morocco&apos;&#13;&#10;    WHEN &apos;Mozambique&apos; THEN &apos;Mozambique&apos;&#13;&#10;    WHEN &apos;Myanmar&apos; THEN &apos;Myanmar&apos;&#13;&#10;    WHEN &apos;Namibia&apos; THEN &apos;Namibia&apos;&#13;&#10;    WHEN &apos;Nauru&apos; THEN &apos;Nauru&apos;&#13;&#10;    WHEN &apos;Nepal&apos; THEN &apos;Nepal&apos;&#13;&#10;    WHEN &apos;Netherlands&apos; THEN &apos;Netherlands&apos;&#13;&#10;    WHEN &apos;New Zealand&apos; THEN &apos;New Zealand&apos;&#13;&#10;    WHEN &apos;Nicaragua&apos; THEN &apos;Nicaragua&apos;&#13;&#10;    WHEN &apos;Niger&apos; THEN &apos;Niger&apos;&#13;&#10;    WHEN &apos;Nigeria&apos; THEN &apos;Nigeria&apos;&#13;&#10;    WHEN &apos;North Macedonia&apos; THEN &apos;North Macedonia&apos;&#13;&#10;    WHEN &apos;Norway&apos; THEN &apos;Norway&apos;&#13;&#10;    WHEN &apos;Oman&apos; THEN &apos;Oman&apos;&#13;&#10;    WHEN &apos;Pakistan&apos; THEN &apos;Pakistan&apos;&#13;&#10;    WHEN &apos;Palau&apos; THEN &apos;Palau&apos;&#13;&#10;    WHEN &apos;Panama&apos; THEN &apos;Panama&apos;&#13;&#10;    WHEN &apos;Papua New Guinea&apos; THEN &apos;Papua New Guinea&apos;&#13;&#10;    WHEN &apos;Paraguay&apos; THEN &apos;Paraguay&apos;&#13;&#10;    WHEN &apos;Peru&apos; THEN &apos;Peru&apos;&#13;&#10;    WHEN &apos;Philippines&apos; THEN &apos;Philippines&apos;&#13;&#10;    WHEN &apos;Poland&apos; THEN &apos;Poland&apos;&#13;&#10;    WHEN &apos;Portugal&apos; THEN &apos;Portugal&apos;&#13;&#10;    WHEN &apos;Qatar&apos; THEN &apos;Qatar&apos;&#13;&#10;    WHEN &apos;Republic of Korea&apos; THEN &apos;Republic of Korea&apos;&#13;&#10;    WHEN &apos;Republic of Moldova&apos; THEN &apos;Republic of Moldova&apos;&#13;&#10;    WHEN &apos;Romania&apos; THEN &apos;Romania&apos;&#13;&#10;    WHEN &apos;Russian Federation&apos; THEN &apos;Russian Federation&apos;&#13;&#10;    WHEN &apos;Rwanda&apos; THEN &apos;Rwanda&apos;&#13;&#10;    WHEN &apos;Saint Kitts and Nevis&apos; THEN &apos;Saint Kitts and Nevis&apos;&#13;&#10;    WHEN &apos;Saint Lucia&apos; THEN &apos;Saint Lucia&apos;&#13;&#10;    WHEN &apos;Saint Vincent and the Grenadines&apos; THEN &apos;Saint Vincent and the Grenadines&apos;&#13;&#10;    WHEN &apos;Samoa&apos; THEN &apos;Samoa&apos;&#13;&#10;    WHEN &apos;San Marino&apos; THEN &apos;San Marino&apos;&#13;&#10;    WHEN &apos;Sao Tome and Principe&apos; THEN &apos;Sao Tome and Principe&apos;&#13;&#10;    WHEN &apos;Saudi Arabia&apos; THEN &apos;Saudi Arabia&apos;&#13;&#10;    WHEN &apos;Senegal&apos; THEN &apos;Senegal&apos;&#13;&#10;    WHEN &apos;Serbia&apos; THEN &apos;Serbia&apos;&#13;&#10;    WHEN &apos;Seychelles&apos; THEN &apos;Seychelles&apos;&#13;&#10;    WHEN &apos;Sierra Leone&apos; THEN &apos;Sierra Leone&apos;&#13;&#10;    WHEN &apos;Singapore&apos; THEN &apos;Singapore&apos;&#13;&#10;    WHEN &apos;Slovakia&apos; THEN &apos;Slovakia&apos;&#13;&#10;    WHEN &apos;Slovenia&apos; THEN &apos;Slovenia&apos;&#13;&#10;    WHEN &apos;Solomon Islands&apos; THEN &apos;Solomon Islands&apos;&#13;&#10;    WHEN &apos;Somalia&apos; THEN &apos;Somalia&apos;&#13;&#10;    WHEN &apos;South Africa&apos; THEN &apos;South Africa&apos;&#13;&#10;    WHEN &apos;South Sudan&apos; THEN &apos;South Sudan&apos;&#13;&#10;    WHEN &apos;Spain&apos; THEN &apos;Spain&apos;&#13;&#10;    WHEN &apos;Sri Lanka&apos; THEN &apos;Sri Lanka&apos;&#13;&#10;    WHEN &apos;State of Palestine&apos; THEN &apos;State of Palestine&apos;&#13;&#10;    WHEN &apos;Sudan&apos; THEN &apos;Sudan&apos;&#13;&#10;    WHEN &apos;Suriname&apos; THEN &apos;Suriname&apos;&#13;&#10;    WHEN &apos;Sweden&apos; THEN &apos;Sweden&apos;&#13;&#10;    WHEN &apos;Switzerland&apos; THEN &apos;Switzerland&apos;&#13;&#10;    WHEN &apos;Syrian Arab Republic&apos; THEN &apos;Syrian Arab Republic&apos;&#13;&#10;    WHEN &apos;Tajikistan&apos; THEN &apos;Tajikistan&apos;&#13;&#10;    WHEN &apos;Thailand&apos; THEN &apos;Thailand&apos;&#13;&#10;    WHEN &apos;Timor-Leste&apos; THEN &apos;Timor-Leste&apos;&#13;&#10;    WHEN &apos;Togo&apos; THEN &apos;Togo&apos;&#13;&#10;    WHEN &apos;Tonga&apos; THEN &apos;Tonga&apos;&#13;&#10;    WHEN &apos;Trinidad and Tobago&apos; THEN &apos;Trinidad and Tobago&apos;&#13;&#10;    WHEN &apos;Tunisia&apos; THEN &apos;Tunisia&apos;&#13;&#10;    WHEN &apos;Turkmenistan&apos; THEN &apos;Turkmenistan&apos;&#13;&#10;    WHEN &apos;Tuvalu&apos; THEN &apos;Tuvalu&apos;&#13;&#10;    WHEN &apos;Uganda&apos; THEN &apos;Uganda&apos;&#13;&#10;    WHEN &apos;Ukraine&apos; THEN &apos;Ukraine&apos;&#13;&#10;    WHEN &apos;United Arab Emirates&apos; THEN &apos;United Arab Emirates&apos;&#13;&#10;    WHEN &apos;United Kingdom&apos; THEN &apos;United Kingdom&apos;&#13;&#10;    WHEN &apos;United Republic of Tanzania&apos; THEN &apos;United Republic of Tanzania&apos;&#13;&#10;    WHEN &apos;United States of America&apos; THEN &apos;United States of America&apos;&#13;&#10;    WHEN &apos;Uruguay&apos; THEN &apos;Uruguay&apos;&#13;&#10;    WHEN &apos;Uzbekistan&apos; THEN &apos;Uzbekistan&apos;&#13;&#10;    WHEN &apos;Vanuatu&apos; THEN &apos;Vanuatu&apos;&#13;&#10;    WHEN &apos;Venezuela (Bolivarian Republic of)&apos; THEN &apos;Venezuela (Bolivarian Republic of)&apos;&#13;&#10;    WHEN &apos;Viet Nam&apos; THEN &apos;Viet Nam&apos;&#13;&#10;    WHEN &apos;Yemen&apos; THEN &apos;Yemen&apos;&#13;&#10;    WHEN &apos;Zambia&apos; THEN &apos;Zambia&apos;&#13;&#10;    WHEN &apos;Zimbabwe&apos; THEN &apos;Zimbabwe&apos;&#13;&#10;    ELSE NULL&#13;&#10;END' />
            </column>
            <column caption='Total Migrantes' datatype='real' name='[Calculation_1275926122990092313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; &#13;&#10;THEN [value] END' />
            </column>
            <column-instance column='[Calculation_1275926122935771151]' derivation='None' name='[none:Calculation_1275926122935771151:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Region Country Area' datatype='string' name='[region_country_area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1275926122990092313]' derivation='Sum' name='[sum:Calculation_1275926122990092313:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1275926122935771151:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</column>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122990092313:qk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122990092313:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122990092313:qk]' />
              <lod column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]' />
              <lod column='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122990092313:qk]' />
              <geometry column='[federated.1l4sx510lvvcov190txbf16cwi2e].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='116' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l4sx510lvvcov190txbf16cwi2e].[Latitude (generated)]</rows>
        <cols>[federated.1l4sx510lvvcov190txbf16cwi2e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{16F09242-3B90-4485-AE68-6AAB6FDECA24}' />
    </worksheet>
    <worksheet name='mayor stock de migrantes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ&#10;</run>
            <run fontcolor='#ffffff'>Migrantes 2020-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='International_migrants_and_refugees' name='federated.1l4sx510lvvcov190txbf16cwi2e' />
          </datasources>
          <datasource-dependencies datasource='federated.1l4sx510lvvcov190txbf16cwi2e'>
            <column caption='Migrantes' datatype='real' name='[Calculation_1275926122927964167]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [series] = &quot;International migrant stock: Both sexes (number)&quot; THEN [value] ELSE 0 END' />
            </column>
            <column caption='Países' datatype='string' name='[Calculation_1275926122935771151]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='CASE [region_country_area]&#13;&#10;    WHEN &apos;Afghanistan&apos; THEN &apos;Afghanistan&apos;&#13;&#10;    WHEN &apos;Albania&apos; THEN &apos;Albania&apos;&#13;&#10;    WHEN &apos;Algeria&apos; THEN &apos;Algeria&apos;&#13;&#10;    WHEN &apos;Andorra&apos; THEN &apos;Andorra&apos;&#13;&#10;    WHEN &apos;Angola&apos; THEN &apos;Angola&apos;&#13;&#10;    WHEN &apos;Antigua and Barbuda&apos; THEN &apos;Antigua and Barbuda&apos;&#13;&#10;    WHEN &apos;Argentina&apos; THEN &apos;Argentina&apos;&#13;&#10;    WHEN &apos;Armenia&apos; THEN &apos;Armenia&apos;&#13;&#10;    WHEN &apos;Australia&apos; THEN &apos;Australia&apos;&#13;&#10;    WHEN &apos;Austria&apos; THEN &apos;Austria&apos;&#13;&#10;    WHEN &apos;Azerbaijan&apos; THEN &apos;Azerbaijan&apos;&#13;&#10;    WHEN &apos;Bahamas&apos; THEN &apos;Bahamas&apos;&#13;&#10;    WHEN &apos;Bahrain&apos; THEN &apos;Bahrain&apos;&#13;&#10;    WHEN &apos;Bangladesh&apos; THEN &apos;Bangladesh&apos;&#13;&#10;    WHEN &apos;Barbados&apos; THEN &apos;Barbados&apos;&#13;&#10;    WHEN &apos;Belarus&apos; THEN &apos;Belarus&apos;&#13;&#10;    WHEN &apos;Belgium&apos; THEN &apos;Belgium&apos;&#13;&#10;    WHEN &apos;Belize&apos; THEN &apos;Belize&apos;&#13;&#10;    WHEN &apos;Benin&apos; THEN &apos;Benin&apos;&#13;&#10;    WHEN &apos;Bhutan&apos; THEN &apos;Bhutan&apos;&#13;&#10;    WHEN &apos;Bolivia (Plurinational State of)&apos; THEN &apos;Bolivia (Plurinational State of)&apos;&#13;&#10;    WHEN &apos;Bosnia and Herzegovina&apos; THEN &apos;Bosnia and Herzegovina&apos;&#13;&#10;    WHEN &apos;Botswana&apos; THEN &apos;Botswana&apos;&#13;&#10;    WHEN &apos;Brazil&apos; THEN &apos;Brazil&apos;&#13;&#10;    WHEN &apos;Brunei Darussalam&apos; THEN &apos;Brunei Darussalam&apos;&#13;&#10;    WHEN &apos;Bulgaria&apos; THEN &apos;Bulgaria&apos;&#13;&#10;    WHEN &apos;Burkina Faso&apos; THEN &apos;Burkina Faso&apos;&#13;&#10;    WHEN &apos;Burundi&apos; THEN &apos;Burundi&apos;&#13;&#10;    WHEN &apos;Cabo Verde&apos; THEN &apos;Cabo Verde&apos;&#13;&#10;    WHEN &apos;Cambodia&apos; THEN &apos;Cambodia&apos;&#13;&#10;    WHEN &apos;Cameroon&apos; THEN &apos;Cameroon&apos;&#13;&#10;    WHEN &apos;Canada&apos; THEN &apos;Canada&apos;&#13;&#10;    WHEN &apos;Central African Republic&apos; THEN &apos;Central African Republic&apos;&#13;&#10;    WHEN &apos;Chad&apos; THEN &apos;Chad&apos;&#13;&#10;    WHEN &apos;Chile&apos; THEN &apos;Chile&apos;&#13;&#10;    WHEN &apos;China&apos; THEN &apos;China&apos;&#13;&#10;    WHEN &apos;Colombia&apos; THEN &apos;Colombia&apos;&#13;&#10;    WHEN &apos;Comoros&apos; THEN &apos;Comoros&apos;&#13;&#10;    WHEN &apos;Congo&apos; THEN &apos;Congo&apos;&#13;&#10;    WHEN &apos;Costa Rica&apos; THEN &apos;Costa Rica&apos;&#13;&#10;    WHEN &apos;Cote dIvoire&apos; THEN &apos;Cote dIvoire&apos;&#13;&#10;    WHEN &apos;Croatia&apos; THEN &apos;Croatia&apos;&#13;&#10;    WHEN &apos;Cuba&apos; THEN &apos;Cuba&apos;&#13;&#10;    WHEN &apos;Cyprus&apos; THEN &apos;Cyprus&apos;&#13;&#10;    WHEN &apos;Czechia&apos; THEN &apos;Czechia&apos;&#13;&#10;    WHEN &apos;Democratic Republic of the Congo&apos; THEN &apos;Democratic Republic of the Congo&apos;&#13;&#10;    WHEN &apos;Denmark&apos; THEN &apos;Denmark&apos;&#13;&#10;    WHEN &apos;Djibouti&apos; THEN &apos;Djibouti&apos;&#13;&#10;    WHEN &apos;Dominica&apos; THEN &apos;Dominica&apos;&#13;&#10;    WHEN &apos;Dominican Republic&apos; THEN &apos;Dominican Republic&apos;&#13;&#10;    WHEN &apos;Ecuador&apos; THEN &apos;Ecuador&apos;&#13;&#10;    WHEN &apos;Egypt&apos; THEN &apos;Egypt&apos;&#13;&#10;    WHEN &apos;El Salvador&apos; THEN &apos;El Salvador&apos;&#13;&#10;    WHEN &apos;Equatorial Guinea&apos; THEN &apos;Equatorial Guinea&apos;&#13;&#10;    WHEN &apos;Eritrea&apos; THEN &apos;Eritrea&apos;&#13;&#10;    WHEN &apos;Estonia&apos; THEN &apos;Estonia&apos;&#13;&#10;    WHEN &apos;Eswatini&apos; THEN &apos;Eswatini&apos;&#13;&#10;    WHEN &apos;Ethiopia&apos; THEN &apos;Ethiopia&apos;&#13;&#10;    WHEN &apos;Fiji&apos; THEN &apos;Fiji&apos;&#13;&#10;    WHEN &apos;Finland&apos; THEN &apos;Finland&apos;&#13;&#10;    WHEN &apos;France&apos; THEN &apos;France&apos;&#13;&#10;    WHEN &apos;Gabon&apos; THEN &apos;Gabon&apos;&#13;&#10;    WHEN &apos;Gambia&apos; THEN &apos;Gambia&apos;&#13;&#10;    WHEN &apos;Georgia&apos; THEN &apos;Georgia&apos;&#13;&#10;    WHEN &apos;Germany&apos; THEN &apos;Germany&apos;&#13;&#10;    WHEN &apos;Ghana&apos; THEN &apos;Ghana&apos;&#13;&#10;    WHEN &apos;Greece&apos; THEN &apos;Greece&apos;&#13;&#10;    WHEN &apos;Grenada&apos; THEN &apos;Grenada&apos;&#13;&#10;    WHEN &apos;Guatemala&apos; THEN &apos;Guatemala&apos;&#13;&#10;    WHEN &apos;Guinea&apos; THEN &apos;Guinea&apos;&#13;&#10;    WHEN &apos;Guinea-Bissau&apos; THEN &apos;Guinea-Bissau&apos;&#13;&#10;    WHEN &apos;Guyana&apos; THEN &apos;Guyana&apos;&#13;&#10;    WHEN &apos;Haiti&apos; THEN &apos;Haiti&apos;&#13;&#10;    WHEN &apos;Honduras&apos; THEN &apos;Honduras&apos;&#13;&#10;    WHEN &apos;Hungary&apos; THEN &apos;Hungary&apos;&#13;&#10;    WHEN &apos;Iceland&apos; THEN &apos;Iceland&apos;&#13;&#10;    WHEN &apos;India&apos; THEN &apos;India&apos;&#13;&#10;    WHEN &apos;Indonesia&apos; THEN &apos;Indonesia&apos;&#13;&#10;    WHEN &apos;Iran (Islamic Republic of)&apos; THEN &apos;Iran (Islamic Republic of)&apos;&#13;&#10;    WHEN &apos;Iraq&apos; THEN &apos;Iraq&apos;&#13;&#10;    WHEN &apos;Ireland&apos; THEN &apos;Ireland&apos;&#13;&#10;    WHEN &apos;Israel&apos; THEN &apos;Israel&apos;&#13;&#10;    WHEN &apos;Italy&apos; THEN &apos;Italy&apos;&#13;&#10;    WHEN &apos;Jamaica&apos; THEN &apos;Jamaica&apos;&#13;&#10;    WHEN &apos;Japan&apos; THEN &apos;Japan&apos;&#13;&#10;    WHEN &apos;Jordan&apos; THEN &apos;Jordan&apos;&#13;&#10;    WHEN &apos;Kazakhstan&apos; THEN &apos;Kazakhstan&apos;&#13;&#10;    WHEN &apos;Kenya&apos; THEN &apos;Kenya&apos;&#13;&#10;    WHEN &apos;Kiribati&apos; THEN &apos;Kiribati&apos;&#13;&#10;    WHEN &apos;Kuwait&apos; THEN &apos;Kuwait&apos;&#13;&#10;    WHEN &apos;Kyrgyzstan&apos; THEN &apos;Kyrgyzstan&apos;&#13;&#10;    WHEN &apos;Lao Peoples Democratic Republic&apos; THEN &apos;Lao Peoples Democratic Republic&apos;&#13;&#10;    WHEN &apos;Latvia&apos; THEN &apos;Latvia&apos;&#13;&#10;    WHEN &apos;Lebanon&apos; THEN &apos;Lebanon&apos;&#13;&#10;    WHEN &apos;Lesotho&apos; THEN &apos;Lesotho&apos;&#13;&#10;    WHEN &apos;Liberia&apos; THEN &apos;Liberia&apos;&#13;&#10;    WHEN &apos;Libya&apos; THEN &apos;Libya&apos;&#13;&#10;    WHEN &apos;Liechtenstein&apos; THEN &apos;Liechtenstein&apos;&#13;&#10;    WHEN &apos;Lithuania&apos; THEN &apos;Lithuania&apos;&#13;&#10;    WHEN &apos;Luxembourg&apos; THEN &apos;Luxembourg&apos;&#13;&#10;    WHEN &apos;Madagascar&apos; THEN &apos;Madagascar&apos;&#13;&#10;    WHEN &apos;Malawi&apos; THEN &apos;Malawi&apos;&#13;&#10;    WHEN &apos;Malaysia&apos; THEN &apos;Malaysia&apos;&#13;&#10;    WHEN &apos;Maldives&apos; THEN &apos;Maldives&apos;&#13;&#10;    WHEN &apos;Mali&apos; THEN &apos;Mali&apos;&#13;&#10;    WHEN &apos;Malta&apos; THEN &apos;Malta&apos;&#13;&#10;    WHEN &apos;Marshall Islands&apos; THEN &apos;Marshall Islands&apos;&#13;&#10;    WHEN &apos;Mauritania&apos; THEN &apos;Mauritania&apos;&#13;&#10;    WHEN &apos;Mauritius&apos; THEN &apos;Mauritius&apos;&#13;&#10;    WHEN &apos;Mexico&apos; THEN &apos;Mexico&apos;&#13;&#10;    WHEN &apos;Micronesia (Federated States of)&apos; THEN &apos;Micronesia (Federated States of)&apos;&#13;&#10;    WHEN &apos;Monaco&apos; THEN &apos;Monaco&apos;&#13;&#10;    WHEN &apos;Mongolia&apos; THEN &apos;Mongolia&apos;&#13;&#10;    WHEN &apos;Montenegro&apos; THEN &apos;Montenegro&apos;&#13;&#10;    WHEN &apos;Morocco&apos; THEN &apos;Morocco&apos;&#13;&#10;    WHEN &apos;Mozambique&apos; THEN &apos;Mozambique&apos;&#13;&#10;    WHEN &apos;Myanmar&apos; THEN &apos;Myanmar&apos;&#13;&#10;    WHEN &apos;Namibia&apos; THEN &apos;Namibia&apos;&#13;&#10;    WHEN &apos;Nauru&apos; THEN &apos;Nauru&apos;&#13;&#10;    WHEN &apos;Nepal&apos; THEN &apos;Nepal&apos;&#13;&#10;    WHEN &apos;Netherlands&apos; THEN &apos;Netherlands&apos;&#13;&#10;    WHEN &apos;New Zealand&apos; THEN &apos;New Zealand&apos;&#13;&#10;    WHEN &apos;Nicaragua&apos; THEN &apos;Nicaragua&apos;&#13;&#10;    WHEN &apos;Niger&apos; THEN &apos;Niger&apos;&#13;&#10;    WHEN &apos;Nigeria&apos; THEN &apos;Nigeria&apos;&#13;&#10;    WHEN &apos;North Macedonia&apos; THEN &apos;North Macedonia&apos;&#13;&#10;    WHEN &apos;Norway&apos; THEN &apos;Norway&apos;&#13;&#10;    WHEN &apos;Oman&apos; THEN &apos;Oman&apos;&#13;&#10;    WHEN &apos;Pakistan&apos; THEN &apos;Pakistan&apos;&#13;&#10;    WHEN &apos;Palau&apos; THEN &apos;Palau&apos;&#13;&#10;    WHEN &apos;Panama&apos; THEN &apos;Panama&apos;&#13;&#10;    WHEN &apos;Papua New Guinea&apos; THEN &apos;Papua New Guinea&apos;&#13;&#10;    WHEN &apos;Paraguay&apos; THEN &apos;Paraguay&apos;&#13;&#10;    WHEN &apos;Peru&apos; THEN &apos;Peru&apos;&#13;&#10;    WHEN &apos;Philippines&apos; THEN &apos;Philippines&apos;&#13;&#10;    WHEN &apos;Poland&apos; THEN &apos;Poland&apos;&#13;&#10;    WHEN &apos;Portugal&apos; THEN &apos;Portugal&apos;&#13;&#10;    WHEN &apos;Qatar&apos; THEN &apos;Qatar&apos;&#13;&#10;    WHEN &apos;Republic of Korea&apos; THEN &apos;Republic of Korea&apos;&#13;&#10;    WHEN &apos;Republic of Moldova&apos; THEN &apos;Republic of Moldova&apos;&#13;&#10;    WHEN &apos;Romania&apos; THEN &apos;Romania&apos;&#13;&#10;    WHEN &apos;Russian Federation&apos; THEN &apos;Russian Federation&apos;&#13;&#10;    WHEN &apos;Rwanda&apos; THEN &apos;Rwanda&apos;&#13;&#10;    WHEN &apos;Saint Kitts and Nevis&apos; THEN &apos;Saint Kitts and Nevis&apos;&#13;&#10;    WHEN &apos;Saint Lucia&apos; THEN &apos;Saint Lucia&apos;&#13;&#10;    WHEN &apos;Saint Vincent and the Grenadines&apos; THEN &apos;Saint Vincent and the Grenadines&apos;&#13;&#10;    WHEN &apos;Samoa&apos; THEN &apos;Samoa&apos;&#13;&#10;    WHEN &apos;San Marino&apos; THEN &apos;San Marino&apos;&#13;&#10;    WHEN &apos;Sao Tome and Principe&apos; THEN &apos;Sao Tome and Principe&apos;&#13;&#10;    WHEN &apos;Saudi Arabia&apos; THEN &apos;Saudi Arabia&apos;&#13;&#10;    WHEN &apos;Senegal&apos; THEN &apos;Senegal&apos;&#13;&#10;    WHEN &apos;Serbia&apos; THEN &apos;Serbia&apos;&#13;&#10;    WHEN &apos;Seychelles&apos; THEN &apos;Seychelles&apos;&#13;&#10;    WHEN &apos;Sierra Leone&apos; THEN &apos;Sierra Leone&apos;&#13;&#10;    WHEN &apos;Singapore&apos; THEN &apos;Singapore&apos;&#13;&#10;    WHEN &apos;Slovakia&apos; THEN &apos;Slovakia&apos;&#13;&#10;    WHEN &apos;Slovenia&apos; THEN &apos;Slovenia&apos;&#13;&#10;    WHEN &apos;Solomon Islands&apos; THEN &apos;Solomon Islands&apos;&#13;&#10;    WHEN &apos;Somalia&apos; THEN &apos;Somalia&apos;&#13;&#10;    WHEN &apos;South Africa&apos; THEN &apos;South Africa&apos;&#13;&#10;    WHEN &apos;South Sudan&apos; THEN &apos;South Sudan&apos;&#13;&#10;    WHEN &apos;Spain&apos; THEN &apos;Spain&apos;&#13;&#10;    WHEN &apos;Sri Lanka&apos; THEN &apos;Sri Lanka&apos;&#13;&#10;    WHEN &apos;State of Palestine&apos; THEN &apos;State of Palestine&apos;&#13;&#10;    WHEN &apos;Sudan&apos; THEN &apos;Sudan&apos;&#13;&#10;    WHEN &apos;Suriname&apos; THEN &apos;Suriname&apos;&#13;&#10;    WHEN &apos;Sweden&apos; THEN &apos;Sweden&apos;&#13;&#10;    WHEN &apos;Switzerland&apos; THEN &apos;Switzerland&apos;&#13;&#10;    WHEN &apos;Syrian Arab Republic&apos; THEN &apos;Syrian Arab Republic&apos;&#13;&#10;    WHEN &apos;Tajikistan&apos; THEN &apos;Tajikistan&apos;&#13;&#10;    WHEN &apos;Thailand&apos; THEN &apos;Thailand&apos;&#13;&#10;    WHEN &apos;Timor-Leste&apos; THEN &apos;Timor-Leste&apos;&#13;&#10;    WHEN &apos;Togo&apos; THEN &apos;Togo&apos;&#13;&#10;    WHEN &apos;Tonga&apos; THEN &apos;Tonga&apos;&#13;&#10;    WHEN &apos;Trinidad and Tobago&apos; THEN &apos;Trinidad and Tobago&apos;&#13;&#10;    WHEN &apos;Tunisia&apos; THEN &apos;Tunisia&apos;&#13;&#10;    WHEN &apos;Turkmenistan&apos; THEN &apos;Turkmenistan&apos;&#13;&#10;    WHEN &apos;Tuvalu&apos; THEN &apos;Tuvalu&apos;&#13;&#10;    WHEN &apos;Uganda&apos; THEN &apos;Uganda&apos;&#13;&#10;    WHEN &apos;Ukraine&apos; THEN &apos;Ukraine&apos;&#13;&#10;    WHEN &apos;United Arab Emirates&apos; THEN &apos;United Arab Emirates&apos;&#13;&#10;    WHEN &apos;United Kingdom&apos; THEN &apos;United Kingdom&apos;&#13;&#10;    WHEN &apos;United Republic of Tanzania&apos; THEN &apos;United Republic of Tanzania&apos;&#13;&#10;    WHEN &apos;United States of America&apos; THEN &apos;United States of America&apos;&#13;&#10;    WHEN &apos;Uruguay&apos; THEN &apos;Uruguay&apos;&#13;&#10;    WHEN &apos;Uzbekistan&apos; THEN &apos;Uzbekistan&apos;&#13;&#10;    WHEN &apos;Vanuatu&apos; THEN &apos;Vanuatu&apos;&#13;&#10;    WHEN &apos;Venezuela (Bolivarian Republic of)&apos; THEN &apos;Venezuela (Bolivarian Republic of)&apos;&#13;&#10;    WHEN &apos;Viet Nam&apos; THEN &apos;Viet Nam&apos;&#13;&#10;    WHEN &apos;Yemen&apos; THEN &apos;Yemen&apos;&#13;&#10;    WHEN &apos;Zambia&apos; THEN &apos;Zambia&apos;&#13;&#10;    WHEN &apos;Zimbabwe&apos; THEN &apos;Zimbabwe&apos;&#13;&#10;    ELSE NULL&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1275926122935771151]' derivation='None' name='[none:Calculation_1275926122935771151:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Region Country Area' datatype='string' name='[region_country_area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Series' datatype='string' name='[series]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1275926122927964167]' derivation='Sum' name='[sum:Calculation_1275926122927964167:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1275926122927964167])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bahamas&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cabo Verde&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Congo&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Gambia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Republic of Korea&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Republic of Moldova&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Saint Lucia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;State of Palestine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Timor-Leste&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;United States of America&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Viet Nam&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1275926122935771151:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2023</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122927964167:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</column>
            <column>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122927964167:qk]' value='24' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='height' field='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]' value='84' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</rows>
        <cols>[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122927964167:qk]</cols>
      </table>
      <simple-id uuid='{77B44EAB-7A96-44B2-AF48-422B8D19D3A3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Analisis_2020_2023'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='wrap' value='off' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' sizing-mode='fixed' />
      <zones>
        <zone h='16833' id='42' name='KPI_2020-2023' w='99125' x='0' y='1333'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='31667' id='30' name='Comparativo' show-title='false' w='100375' x='-375' y='68000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='48833' id='37' name='mayor stock de migrantes' show-title='false' w='49000' x='1000' y='18333'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='49167' id='41' name='Personas de Preocupación' show-title='false' w='49000' x='49625' y='18667'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='17833' id='33' name='Comparativo' pane-specification-id='8' param='[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]' type-v2='color' w='18375' x='82500' y='72667' />
      </zones>
      <simple-id uuid='{79062AB3-E4C2-48DC-AE2B-C6A1C2F34A32}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Vista rapida a datos migratorios'>
      <style />
      <size maxheight='400' maxwidth='600' minheight='400' minwidth='600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='96000' id='22' param='horz' type-v2='layout-flow' w='97334' x='1333' y='2000'>
            <zone h='96000' id='5' type-v2='layout-basic' w='97334' x='1333' y='2000'>
              <zone h='23000' id='3' name='KPI' w='43000' x='1333' y='2000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='96000' id='17' name='Mapa de Arbol' w='54334' x='44333' y='2000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='73000' id='20' name='Distribución de género en la migración' w='43000' x='1333' y='25000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BC2ED67F-22C0-4DAD-9290-31E7D0057E0E}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Comparativo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='8' param='[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[Multiple Values]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:country_code:ok]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:region_country_area:nk]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:series:nk]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C95F3472-DFCB-4F80-BD38-F979F0785710}' />
    </window>
    <window class='worksheet' name='mayor stock de migrantes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5A47F71-E029-4D1D-ADB7-3C3E5076FF98}' />
    </window>
    <window class='worksheet' name='Distribución de género en la migración'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122913255424:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EAD9639-D05C-4044-95D1-C3005712D9EC}' />
    </window>
    <window class='worksheet' name='Personas de Preocupación'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:Calculation_1275926122990092313:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{248E5F59-D240-4077-9552-16AD8BF0DFD3}' />
    </window>
    <window class='worksheet' name='Mapa de Arbol'>
      <cards>
        <edge name='left'>
          <strip size='189'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:Calculation_1275926122935771151:nk]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:region_country_area:nk]</field>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FF3BFEA-0366-445E-8271-EF5DD094BDEF}' />
    </window>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76C549CE-558C-4007-9AE1-EE666206B963}' />
    </window>
    <window class='worksheet' name='KPI_2020-2023'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EBB5E47-6CE9-4BBD-A725-F84416CED164}' />
    </window>
    <window class='dashboard' maximized='true' name='Vista rapida a datos migratorios'>
      <viewpoints>
        <viewpoint name='Distribución de género en la migración'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mapa de Arbol' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CD554603-40A9-4F45-B0BF-A5EC6DEB124B}' />
    </window>
    <window class='dashboard' name='Analisis_2020_2023'>
      <viewpoints>
        <viewpoint name='Comparativo'>
          <highlight>
            <color-one-way>
              <field>[federated.1l4sx510lvvcov190txbf16cwi2e].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='KPI_2020-2023'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Personas de Preocupación'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='mayor stock de migrantes' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4094D91E-12B5-4129-A6F9-B4AF06A3753F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Analisis_2020_2023' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparativo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distribución de género en la migración' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='KPI' width='192'>
      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
      bJK/1Vjq/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='KPI_2020-2023' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mapa de Arbol' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Personas de Preocupación' width='192'>
      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
      E2MplEpyC4vQT0zQWt/AlQuVBEdoUSmVdHf0kbs6C6lMgnHaSGpWCu1NXUwbDHx04AAKpYKc
      gkJ0/v4L2oxLTPLktmpmnWFrNm70HKNUKknLuhU0pvLyWvD/Z40Zs5neri4UCgVhkbdEGYvF
      Ql11NTOWSZwuJ0++8DhSqXSB2Oir1TBtmF42LNc4bVwU1nD7MdMGI4YpA6ERiy1vDoeDyfHJ
      uz7DnNx85vg5/vh7f8Tbv/oAtY8GXUAgTY1VfPPPX0YkEmE2mZErFMhmJ7PD4cA6A12telLT
      V+MfuHLfxBz8dDp6uusWPb/D4aD03FXGR62s37LzjoubQCCgub6RKxfPkJyWQ2/3AGWXynns
      uUd45Nm97hgoqw0kTh7d+yhvvvsWm3bsISE5FZvVSlNjI2mZt/TWe84I8/H1JbfQHd47NjKC
      1WJh49YCKivKOHfqMH/1ox9gs9sYGRyhcL27KHJnWxc/+dErvPSNbxObcHfny50eXigS0dnW
      Rkx8/Cdq45NCKpOhVCoZGRry5AnPofpaBS//6QtExkSgn5ziv/7tV5jMZvy0vvhofBCKhAgQ
      kFPoTjJxB7LV0trUxsTYBBPjk8jlMl74xvPLx9zbbHy4/xDPfeVH0dNwAAAgAElEQVSZBXQt
      czhz7BwqLxUqL9WSCUvzrS49nT1odX5UVVThcBg58ObrfPlbf0JIaAgqL9VsXV+3/2d8bIKr
      H1/DaLCyY8/j+C6RaL9SyBUK7DbpIqNKTWU9Lqc3G7YuzQ53O778rW9htViQKxT87F/+yWNO
      drlcWC1WBvsHcUkdGAwGYqKi6OysIzo2HrlCQVpm5oK2PjEznEBwi8UMILdgNT6+fpw5WsqN
      a+WIpWJKzl/GYDAQEBjAtj1uRenTJtdLJBIsFst9TdJfKYLDwpZMSwwICuaDtz/E4XSwcft6
      svIz8fLxIrcgZ9E99nT2cOzDE8QlxvHIM/v45f/9FX/2P/8ElVpFeWkF775+gA3b1qML1BEY
      FMD46DguXHS0dDI5oUcidbNV3I6+nj6+9PXnF+ggSx0H7ojR7o4eQsNDSUxJQCwR885rv0YX
      4I9x2oRAIKCspJzR4Ul8fYPJyF6HyuvewjiWgkAgoGDNWi6eOcLeJ3d5+kYqkyBXiFf0PsdG
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vista rapida a datos migratorios' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='mayor stock de migrantes' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <explain-data enabled-for-viewer='false' extreme-values-enabled-for-all='false'>
    <explanation-types>
      <explanation-type enabled='true' type='number-of-records' />
      <explanation-type enabled='true' type='average-of-records' />
      <explanation-type enabled='true' type='aggregated-dimensions' />
      <explanation-type enabled='true' type='distribution-of-records' />
      <explanation-type enabled='true' type='unvisualized-measures' />
      <explanation-type enabled='true' type='extreme-values' />
      <explanation-type enabled='true' type='null-value' />
      <explanation-type enabled='true' type='tvd-single-value' />
      <explanation-type enabled='true' type='ad-single-value' />
    </explanation-types>
  </explain-data>
</workbook>
